//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API_LIB.Model.GET_POINT.GP_ENT
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GP_ENT : DbContext
    {
        public GP_ENT()
            : base("name=GP_ENT")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<sp_in_API_PickUp_Result> sp_in_API_PickUp(string key, Nullable<int> empId, string numeroPedido, Nullable<System.DateTime> fechaCompra, string rutCliente, string nombreCliente, string email, Nullable<int> tipoDocumento, Nullable<int> numeroDocto, Nullable<System.DateTime> fechaDocto, Nullable<decimal> montoCompra, string rutTercero, string nombreTercero, string emailTercero, string usuarioDig, Nullable<int> tipoSolicitud, string direccion, string comuna, string telefono, string glosa)
        {
            var keyParameter = key != null ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var numeroPedidoParameter = numeroPedido != null ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(string));
    
            var fechaCompraParameter = fechaCompra.HasValue ?
                new ObjectParameter("FechaCompra", fechaCompra) :
                new ObjectParameter("FechaCompra", typeof(System.DateTime));
    
            var rutClienteParameter = rutCliente != null ?
                new ObjectParameter("RutCliente", rutCliente) :
                new ObjectParameter("RutCliente", typeof(string));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(int));
    
            var numeroDoctoParameter = numeroDocto.HasValue ?
                new ObjectParameter("NumeroDocto", numeroDocto) :
                new ObjectParameter("NumeroDocto", typeof(int));
    
            var fechaDoctoParameter = fechaDocto.HasValue ?
                new ObjectParameter("FechaDocto", fechaDocto) :
                new ObjectParameter("FechaDocto", typeof(System.DateTime));
    
            var montoCompraParameter = montoCompra.HasValue ?
                new ObjectParameter("MontoCompra", montoCompra) :
                new ObjectParameter("MontoCompra", typeof(decimal));
    
            var rutTerceroParameter = rutTercero != null ?
                new ObjectParameter("RutTercero", rutTercero) :
                new ObjectParameter("RutTercero", typeof(string));
    
            var nombreTerceroParameter = nombreTercero != null ?
                new ObjectParameter("NombreTercero", nombreTercero) :
                new ObjectParameter("NombreTercero", typeof(string));
    
            var emailTerceroParameter = emailTercero != null ?
                new ObjectParameter("EmailTercero", emailTercero) :
                new ObjectParameter("EmailTercero", typeof(string));
    
            var usuarioDigParameter = usuarioDig != null ?
                new ObjectParameter("UsuarioDig", usuarioDig) :
                new ObjectParameter("UsuarioDig", typeof(string));
    
            var tipoSolicitudParameter = tipoSolicitud.HasValue ?
                new ObjectParameter("TipoSolicitud", tipoSolicitud) :
                new ObjectParameter("TipoSolicitud", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var comunaParameter = comuna != null ?
                new ObjectParameter("Comuna", comuna) :
                new ObjectParameter("Comuna", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var glosaParameter = glosa != null ?
                new ObjectParameter("Glosa", glosa) :
                new ObjectParameter("Glosa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_PickUp_Result>("sp_in_API_PickUp", keyParameter, empIdParameter, numeroPedidoParameter, fechaCompraParameter, rutClienteParameter, nombreClienteParameter, emailParameter, tipoDocumentoParameter, numeroDoctoParameter, fechaDoctoParameter, montoCompraParameter, rutTerceroParameter, nombreTerceroParameter, emailTerceroParameter, usuarioDigParameter, tipoSolicitudParameter, direccionParameter, comunaParameter, telefonoParameter, glosaParameter);
        }
    
        public virtual ObjectResult<sp_in_API_PickUpDet_Result> sp_in_API_PickUpDet(string key, Nullable<int> empId, Nullable<int> genPickId, Nullable<int> linea, string codigoArticulo, string descripArt, Nullable<int> cantidad, Nullable<int> hUId, Nullable<decimal> volumen, Nullable<decimal> peso)
        {
            var keyParameter = key != null ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var genPickIdParameter = genPickId.HasValue ?
                new ObjectParameter("GenPickId", genPickId) :
                new ObjectParameter("GenPickId", typeof(int));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var descripArtParameter = descripArt != null ?
                new ObjectParameter("DescripArt", descripArt) :
                new ObjectParameter("DescripArt", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var hUIdParameter = hUId.HasValue ?
                new ObjectParameter("HUId", hUId) :
                new ObjectParameter("HUId", typeof(int));
    
            var volumenParameter = volumen.HasValue ?
                new ObjectParameter("Volumen", volumen) :
                new ObjectParameter("Volumen", typeof(decimal));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_PickUpDet_Result>("sp_in_API_PickUpDet", keyParameter, empIdParameter, genPickIdParameter, lineaParameter, codigoArticuloParameter, descripArtParameter, cantidadParameter, hUIdParameter, volumenParameter, pesoParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_EmpresasList_Result> sp_sel_API_EmpresasList(string key, Nullable<int> limit, Nullable<int> rowset)
        {
            var keyParameter = key != null ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(string));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var rowsetParameter = rowset.HasValue ?
                new ObjectParameter("Rowset", rowset) :
                new ObjectParameter("Rowset", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_EmpresasList_Result>("sp_sel_API_EmpresasList", keyParameter, limitParameter, rowsetParameter);
        }
    
        public virtual ObjectResult<SP_SEL_API_GRANT_LIST_USUARIOS_Result> SP_SEL_API_GRANT_LIST_USUARIOS(string rUTEMPRESA, string uSERNAME, string aPELLIDOPAT, Nullable<int> eSTADO, Nullable<int> iNDTOKEN, string tOKEN)
        {
            var rUTEMPRESAParameter = rUTEMPRESA != null ?
                new ObjectParameter("RUTEMPRESA", rUTEMPRESA) :
                new ObjectParameter("RUTEMPRESA", typeof(string));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var aPELLIDOPATParameter = aPELLIDOPAT != null ?
                new ObjectParameter("APELLIDOPAT", aPELLIDOPAT) :
                new ObjectParameter("APELLIDOPAT", typeof(string));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var iNDTOKENParameter = iNDTOKEN.HasValue ?
                new ObjectParameter("INDTOKEN", iNDTOKEN) :
                new ObjectParameter("INDTOKEN", typeof(int));
    
            var tOKENParameter = tOKEN != null ?
                new ObjectParameter("TOKEN", tOKEN) :
                new ObjectParameter("TOKEN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SEL_API_GRANT_LIST_USUARIOS_Result>("SP_SEL_API_GRANT_LIST_USUARIOS", rUTEMPRESAParameter, uSERNAMEParameter, aPELLIDOPATParameter, eSTADOParameter, iNDTOKENParameter, tOKENParameter);
        }
    
        public virtual ObjectResult<sp_in_API_CrearProducto_Result> sp_in_API_CrearProducto(Nullable<int> empid, string txt)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var txtParameter = txt != null ?
                new ObjectParameter("txt", txt) :
                new ObjectParameter("txt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_CrearProducto_Result>("sp_in_API_CrearProducto", empidParameter, txtParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_ListarProducto_Result> sp_sel_API_ListarProducto(Nullable<int> empId, string codigoArticulo, string descripcion, Nullable<int> lineaProducto, Nullable<int> tipoProducto, string eAN13, string dUN14, Nullable<int> limit, Nullable<int> rowSet)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var lineaProductoParameter = lineaProducto.HasValue ?
                new ObjectParameter("LineaProducto", lineaProducto) :
                new ObjectParameter("LineaProducto", typeof(int));
    
            var tipoProductoParameter = tipoProducto.HasValue ?
                new ObjectParameter("TipoProducto", tipoProducto) :
                new ObjectParameter("TipoProducto", typeof(int));
    
            var eAN13Parameter = eAN13 != null ?
                new ObjectParameter("EAN13", eAN13) :
                new ObjectParameter("EAN13", typeof(string));
    
            var dUN14Parameter = dUN14 != null ?
                new ObjectParameter("DUN14", dUN14) :
                new ObjectParameter("DUN14", typeof(string));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var rowSetParameter = rowSet.HasValue ?
                new ObjectParameter("RowSet", rowSet) :
                new ObjectParameter("RowSet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_ListarProducto_Result>("sp_sel_API_ListarProducto", empIdParameter, codigoArticuloParameter, descripcionParameter, lineaProductoParameter, tipoProductoParameter, eAN13Parameter, dUN14Parameter, limitParameter, rowSetParameter);
        }
    
        public virtual ObjectResult<sp_in_API_SolRecep_Result> sp_in_API_SolRecep(string key, Nullable<int> empId, string tXT)
        {
            var keyParameter = key != null ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var tXTParameter = tXT != null ?
                new ObjectParameter("TXT", tXT) :
                new ObjectParameter("TXT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_SolRecep_Result>("sp_in_API_SolRecep", keyParameter, empIdParameter, tXTParameter);
        }
    
        public virtual ObjectResult<sp_in_API_SolDesp_Result> sp_in_API_SolDesp(Nullable<int> empId, string txt)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var txtParameter = txt != null ?
                new ObjectParameter("txt", txt) :
                new ObjectParameter("txt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_SolDesp_Result>("sp_in_API_SolDesp", empIdParameter, txtParameter);
        }
    
        public virtual ObjectResult<sp_in_API_TrackingSDD_Result> sp_in_API_TrackingSDD(Nullable<int> empId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaTermino, Nullable<int> solDespId, string tipoReferencia, Nullable<int> numeroReferencia, string rutCliente, Nullable<int> limit, Nullable<int> rowSet)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaTerminoParameter = fechaTermino.HasValue ?
                new ObjectParameter("FechaTermino", fechaTermino) :
                new ObjectParameter("FechaTermino", typeof(System.DateTime));
    
            var solDespIdParameter = solDespId.HasValue ?
                new ObjectParameter("SolDespId", solDespId) :
                new ObjectParameter("SolDespId", typeof(int));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia.HasValue ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(int));
    
            var rutClienteParameter = rutCliente != null ?
                new ObjectParameter("RutCliente", rutCliente) :
                new ObjectParameter("RutCliente", typeof(string));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var rowSetParameter = rowSet.HasValue ?
                new ObjectParameter("RowSet", rowSet) :
                new ObjectParameter("RowSet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_TrackingSDD_Result>("sp_in_API_TrackingSDD", empIdParameter, fechaInicioParameter, fechaTerminoParameter, solDespIdParameter, tipoReferenciaParameter, numeroReferenciaParameter, rutClienteParameter, limitParameter, rowSetParameter);
        }
    
        public virtual ObjectResult<sp_in_API_Confirma_Recep_Bultos_Result> sp_in_API_Confirma_Recep_Bultos(Nullable<int> empId, Nullable<int> recepcionId, string intname, Nullable<System.DateTime> fechaHora, Nullable<int> solRecepId, Nullable<System.DateTime> fechaProceso, Nullable<int> tipoDocumento, Nullable<int> numeroDocto, Nullable<System.DateTime> fechaDocto, string tipoReferencia, Nullable<int> numeroReferencia, Nullable<System.DateTime> fechaReferencia, Nullable<int> linea, string codigoArticulo, string codigoOriginal, string unidadCompra, Nullable<int> cantidadSolicitada, Nullable<int> itemReferencia, string loteSerie, Nullable<System.DateTime> fechaVencto, Nullable<int> cantRecibida, string hU)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(int));
    
            var recepcionIdParameter = recepcionId.HasValue ?
                new ObjectParameter("recepcionId", recepcionId) :
                new ObjectParameter("recepcionId", typeof(int));
    
            var intnameParameter = intname != null ?
                new ObjectParameter("intname", intname) :
                new ObjectParameter("intname", typeof(string));
    
            var fechaHoraParameter = fechaHora.HasValue ?
                new ObjectParameter("fechaHora", fechaHora) :
                new ObjectParameter("fechaHora", typeof(System.DateTime));
    
            var solRecepIdParameter = solRecepId.HasValue ?
                new ObjectParameter("solRecepId", solRecepId) :
                new ObjectParameter("solRecepId", typeof(int));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("fechaProceso", fechaProceso) :
                new ObjectParameter("fechaProceso", typeof(System.DateTime));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(int));
    
            var numeroDoctoParameter = numeroDocto.HasValue ?
                new ObjectParameter("NumeroDocto", numeroDocto) :
                new ObjectParameter("NumeroDocto", typeof(int));
    
            var fechaDoctoParameter = fechaDocto.HasValue ?
                new ObjectParameter("fechaDocto", fechaDocto) :
                new ObjectParameter("fechaDocto", typeof(System.DateTime));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia.HasValue ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(int));
    
            var fechaReferenciaParameter = fechaReferencia.HasValue ?
                new ObjectParameter("FechaReferencia", fechaReferencia) :
                new ObjectParameter("FechaReferencia", typeof(System.DateTime));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var codigoOriginalParameter = codigoOriginal != null ?
                new ObjectParameter("CodigoOriginal", codigoOriginal) :
                new ObjectParameter("CodigoOriginal", typeof(string));
    
            var unidadCompraParameter = unidadCompra != null ?
                new ObjectParameter("UnidadCompra", unidadCompra) :
                new ObjectParameter("UnidadCompra", typeof(string));
    
            var cantidadSolicitadaParameter = cantidadSolicitada.HasValue ?
                new ObjectParameter("CantidadSolicitada", cantidadSolicitada) :
                new ObjectParameter("CantidadSolicitada", typeof(int));
    
            var itemReferenciaParameter = itemReferencia.HasValue ?
                new ObjectParameter("ItemReferencia", itemReferencia) :
                new ObjectParameter("ItemReferencia", typeof(int));
    
            var loteSerieParameter = loteSerie != null ?
                new ObjectParameter("LoteSerie", loteSerie) :
                new ObjectParameter("LoteSerie", typeof(string));
    
            var fechaVenctoParameter = fechaVencto.HasValue ?
                new ObjectParameter("FechaVencto", fechaVencto) :
                new ObjectParameter("FechaVencto", typeof(System.DateTime));
    
            var cantRecibidaParameter = cantRecibida.HasValue ?
                new ObjectParameter("CantRecibida", cantRecibida) :
                new ObjectParameter("CantRecibida", typeof(int));
    
            var hUParameter = hU != null ?
                new ObjectParameter("HU", hU) :
                new ObjectParameter("HU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_Confirma_Recep_Bultos_Result>("sp_in_API_Confirma_Recep_Bultos", empIdParameter, recepcionIdParameter, intnameParameter, fechaHoraParameter, solRecepIdParameter, fechaProcesoParameter, tipoDocumentoParameter, numeroDoctoParameter, fechaDoctoParameter, tipoReferenciaParameter, numeroReferenciaParameter, fechaReferenciaParameter, lineaParameter, codigoArticuloParameter, codigoOriginalParameter, unidadCompraParameter, cantidadSolicitadaParameter, itemReferenciaParameter, loteSerieParameter, fechaVenctoParameter, cantRecibidaParameter, hUParameter);
        }
    
        public virtual ObjectResult<sp_in_API_Entrega_Conforme_Cliente_Result> sp_in_API_Entrega_Conforme_Cliente(Nullable<int> empId, Nullable<int> colaPickId, string intName, Nullable<System.DateTime> fechaHora, Nullable<int> solDespId, Nullable<System.DateTime> fechaProceso, Nullable<int> tipoDocumento, Nullable<int> numeroDocto, Nullable<System.DateTime> fechaDocto, string tipoReferencia, string numeroReferencia, Nullable<System.DateTime> fechaReferencia, Nullable<int> linea, string codigoArticulo, string codigoOriginal, string unidadVenta, Nullable<int> cantidadSolicitada, Nullable<int> itemReferencia, string loteSerieSol, Nullable<System.DateTime> fechaVenctoSol, Nullable<int> cantidadDespachada, string loteSerieDesp, Nullable<System.DateTime> fechaVenctoDesp, Nullable<int> huId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(int));
    
            var colaPickIdParameter = colaPickId.HasValue ?
                new ObjectParameter("colaPickId", colaPickId) :
                new ObjectParameter("colaPickId", typeof(int));
    
            var intNameParameter = intName != null ?
                new ObjectParameter("intName", intName) :
                new ObjectParameter("intName", typeof(string));
    
            var fechaHoraParameter = fechaHora.HasValue ?
                new ObjectParameter("fechaHora", fechaHora) :
                new ObjectParameter("fechaHora", typeof(System.DateTime));
    
            var solDespIdParameter = solDespId.HasValue ?
                new ObjectParameter("solDespId", solDespId) :
                new ObjectParameter("solDespId", typeof(int));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("fechaProceso", fechaProceso) :
                new ObjectParameter("fechaProceso", typeof(System.DateTime));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("tipoDocumento", tipoDocumento) :
                new ObjectParameter("tipoDocumento", typeof(int));
    
            var numeroDoctoParameter = numeroDocto.HasValue ?
                new ObjectParameter("numeroDocto", numeroDocto) :
                new ObjectParameter("numeroDocto", typeof(int));
    
            var fechaDoctoParameter = fechaDocto.HasValue ?
                new ObjectParameter("fechaDocto", fechaDocto) :
                new ObjectParameter("fechaDocto", typeof(System.DateTime));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("tipoReferencia", tipoReferencia) :
                new ObjectParameter("tipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("numeroReferencia", numeroReferencia) :
                new ObjectParameter("numeroReferencia", typeof(string));
    
            var fechaReferenciaParameter = fechaReferencia.HasValue ?
                new ObjectParameter("fechaReferencia", fechaReferencia) :
                new ObjectParameter("fechaReferencia", typeof(System.DateTime));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("linea", linea) :
                new ObjectParameter("linea", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("codigoArticulo", codigoArticulo) :
                new ObjectParameter("codigoArticulo", typeof(string));
    
            var codigoOriginalParameter = codigoOriginal != null ?
                new ObjectParameter("codigoOriginal", codigoOriginal) :
                new ObjectParameter("codigoOriginal", typeof(string));
    
            var unidadVentaParameter = unidadVenta != null ?
                new ObjectParameter("unidadVenta", unidadVenta) :
                new ObjectParameter("unidadVenta", typeof(string));
    
            var cantidadSolicitadaParameter = cantidadSolicitada.HasValue ?
                new ObjectParameter("cantidadSolicitada", cantidadSolicitada) :
                new ObjectParameter("cantidadSolicitada", typeof(int));
    
            var itemReferenciaParameter = itemReferencia.HasValue ?
                new ObjectParameter("ItemReferencia", itemReferencia) :
                new ObjectParameter("ItemReferencia", typeof(int));
    
            var loteSerieSolParameter = loteSerieSol != null ?
                new ObjectParameter("loteSerieSol", loteSerieSol) :
                new ObjectParameter("loteSerieSol", typeof(string));
    
            var fechaVenctoSolParameter = fechaVenctoSol.HasValue ?
                new ObjectParameter("fechaVenctoSol", fechaVenctoSol) :
                new ObjectParameter("fechaVenctoSol", typeof(System.DateTime));
    
            var cantidadDespachadaParameter = cantidadDespachada.HasValue ?
                new ObjectParameter("cantidadDespachada", cantidadDespachada) :
                new ObjectParameter("cantidadDespachada", typeof(int));
    
            var loteSerieDespParameter = loteSerieDesp != null ?
                new ObjectParameter("loteSerieDesp", loteSerieDesp) :
                new ObjectParameter("loteSerieDesp", typeof(string));
    
            var fechaVenctoDespParameter = fechaVenctoDesp.HasValue ?
                new ObjectParameter("fechaVenctoDesp", fechaVenctoDesp) :
                new ObjectParameter("fechaVenctoDesp", typeof(System.DateTime));
    
            var huIdParameter = huId.HasValue ?
                new ObjectParameter("huId", huId) :
                new ObjectParameter("huId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_Entrega_Conforme_Cliente_Result>("sp_in_API_Entrega_Conforme_Cliente", empIdParameter, colaPickIdParameter, intNameParameter, fechaHoraParameter, solDespIdParameter, fechaProcesoParameter, tipoDocumentoParameter, numeroDoctoParameter, fechaDoctoParameter, tipoReferenciaParameter, numeroReferenciaParameter, fechaReferenciaParameter, lineaParameter, codigoArticuloParameter, codigoOriginalParameter, unidadVentaParameter, cantidadSolicitadaParameter, itemReferenciaParameter, loteSerieSolParameter, fechaVenctoSolParameter, cantidadDespachadaParameter, loteSerieDespParameter, fechaVenctoDespParameter, huIdParameter);
        }
    
        public virtual ObjectResult<sp_in_API_Entrega_No_Conforme_Cliente_Result> sp_in_API_Entrega_No_Conforme_Cliente(Nullable<int> empId, Nullable<int> colaPickId, string intName, Nullable<System.DateTime> fechaHora, Nullable<int> solDespId, Nullable<System.DateTime> fechaProceso, Nullable<int> tipoDocumento, Nullable<int> numeroDocto, Nullable<System.DateTime> fechaDocto, string tipoReferencia, string numeroReferencia, Nullable<System.DateTime> fechaReferencia, Nullable<int> linea, string codigoArticulo, string codigoOriginal, string unidadVenta, Nullable<int> cantidadSolicitada, Nullable<int> itemReferencia, string loteSerieSol, Nullable<System.DateTime> fechaVenctoSol, Nullable<int> cantidadDespachada, string loteSerieDesp, Nullable<System.DateTime> fechaVenctoDesp, Nullable<int> huId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(int));
    
            var colaPickIdParameter = colaPickId.HasValue ?
                new ObjectParameter("colaPickId", colaPickId) :
                new ObjectParameter("colaPickId", typeof(int));
    
            var intNameParameter = intName != null ?
                new ObjectParameter("intName", intName) :
                new ObjectParameter("intName", typeof(string));
    
            var fechaHoraParameter = fechaHora.HasValue ?
                new ObjectParameter("fechaHora", fechaHora) :
                new ObjectParameter("fechaHora", typeof(System.DateTime));
    
            var solDespIdParameter = solDespId.HasValue ?
                new ObjectParameter("solDespId", solDespId) :
                new ObjectParameter("solDespId", typeof(int));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("fechaProceso", fechaProceso) :
                new ObjectParameter("fechaProceso", typeof(System.DateTime));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("tipoDocumento", tipoDocumento) :
                new ObjectParameter("tipoDocumento", typeof(int));
    
            var numeroDoctoParameter = numeroDocto.HasValue ?
                new ObjectParameter("numeroDocto", numeroDocto) :
                new ObjectParameter("numeroDocto", typeof(int));
    
            var fechaDoctoParameter = fechaDocto.HasValue ?
                new ObjectParameter("fechaDocto", fechaDocto) :
                new ObjectParameter("fechaDocto", typeof(System.DateTime));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("tipoReferencia", tipoReferencia) :
                new ObjectParameter("tipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("numeroReferencia", numeroReferencia) :
                new ObjectParameter("numeroReferencia", typeof(string));
    
            var fechaReferenciaParameter = fechaReferencia.HasValue ?
                new ObjectParameter("fechaReferencia", fechaReferencia) :
                new ObjectParameter("fechaReferencia", typeof(System.DateTime));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("linea", linea) :
                new ObjectParameter("linea", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("codigoArticulo", codigoArticulo) :
                new ObjectParameter("codigoArticulo", typeof(string));
    
            var codigoOriginalParameter = codigoOriginal != null ?
                new ObjectParameter("codigoOriginal", codigoOriginal) :
                new ObjectParameter("codigoOriginal", typeof(string));
    
            var unidadVentaParameter = unidadVenta != null ?
                new ObjectParameter("unidadVenta", unidadVenta) :
                new ObjectParameter("unidadVenta", typeof(string));
    
            var cantidadSolicitadaParameter = cantidadSolicitada.HasValue ?
                new ObjectParameter("cantidadSolicitada", cantidadSolicitada) :
                new ObjectParameter("cantidadSolicitada", typeof(int));
    
            var itemReferenciaParameter = itemReferencia.HasValue ?
                new ObjectParameter("ItemReferencia", itemReferencia) :
                new ObjectParameter("ItemReferencia", typeof(int));
    
            var loteSerieSolParameter = loteSerieSol != null ?
                new ObjectParameter("loteSerieSol", loteSerieSol) :
                new ObjectParameter("loteSerieSol", typeof(string));
    
            var fechaVenctoSolParameter = fechaVenctoSol.HasValue ?
                new ObjectParameter("fechaVenctoSol", fechaVenctoSol) :
                new ObjectParameter("fechaVenctoSol", typeof(System.DateTime));
    
            var cantidadDespachadaParameter = cantidadDespachada.HasValue ?
                new ObjectParameter("cantidadDespachada", cantidadDespachada) :
                new ObjectParameter("cantidadDespachada", typeof(int));
    
            var loteSerieDespParameter = loteSerieDesp != null ?
                new ObjectParameter("loteSerieDesp", loteSerieDesp) :
                new ObjectParameter("loteSerieDesp", typeof(string));
    
            var fechaVenctoDespParameter = fechaVenctoDesp.HasValue ?
                new ObjectParameter("fechaVenctoDesp", fechaVenctoDesp) :
                new ObjectParameter("fechaVenctoDesp", typeof(System.DateTime));
    
            var huIdParameter = huId.HasValue ?
                new ObjectParameter("huId", huId) :
                new ObjectParameter("huId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_Entrega_No_Conforme_Cliente_Result>("sp_in_API_Entrega_No_Conforme_Cliente", empIdParameter, colaPickIdParameter, intNameParameter, fechaHoraParameter, solDespIdParameter, fechaProcesoParameter, tipoDocumentoParameter, numeroDoctoParameter, fechaDoctoParameter, tipoReferenciaParameter, numeroReferenciaParameter, fechaReferenciaParameter, lineaParameter, codigoArticuloParameter, codigoOriginalParameter, unidadVentaParameter, cantidadSolicitadaParameter, itemReferenciaParameter, loteSerieSolParameter, fechaVenctoSolParameter, cantidadDespachadaParameter, loteSerieDespParameter, fechaVenctoDespParameter, huIdParameter);
        }
    
        public virtual ObjectResult<sp_in_API_Entrega_Conforme_Tienda_Result> sp_in_API_Entrega_Conforme_Tienda(Nullable<int> empId, Nullable<int> colaPickId, string intName, Nullable<System.DateTime> fechaHora, Nullable<int> solDespId, Nullable<System.DateTime> fechaProceso, Nullable<int> tipoDocumento, Nullable<int> numeroDocto, Nullable<System.DateTime> fechaDocto, string tipoReferencia, string numeroReferencia, Nullable<System.DateTime> fechaReferencia, Nullable<int> linea, string codigoArticulo, string codigoOriginal, string unidadVenta, Nullable<int> cantidadSolicitada, Nullable<int> itemReferencia, string loteSerieSol, Nullable<System.DateTime> fechaVenctoSol, Nullable<int> cantidadDespachada, string loteSerieDesp, Nullable<System.DateTime> fechaVenctoDesp, Nullable<int> huId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(int));
    
            var colaPickIdParameter = colaPickId.HasValue ?
                new ObjectParameter("colaPickId", colaPickId) :
                new ObjectParameter("colaPickId", typeof(int));
    
            var intNameParameter = intName != null ?
                new ObjectParameter("intName", intName) :
                new ObjectParameter("intName", typeof(string));
    
            var fechaHoraParameter = fechaHora.HasValue ?
                new ObjectParameter("fechaHora", fechaHora) :
                new ObjectParameter("fechaHora", typeof(System.DateTime));
    
            var solDespIdParameter = solDespId.HasValue ?
                new ObjectParameter("solDespId", solDespId) :
                new ObjectParameter("solDespId", typeof(int));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("fechaProceso", fechaProceso) :
                new ObjectParameter("fechaProceso", typeof(System.DateTime));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("tipoDocumento", tipoDocumento) :
                new ObjectParameter("tipoDocumento", typeof(int));
    
            var numeroDoctoParameter = numeroDocto.HasValue ?
                new ObjectParameter("numeroDocto", numeroDocto) :
                new ObjectParameter("numeroDocto", typeof(int));
    
            var fechaDoctoParameter = fechaDocto.HasValue ?
                new ObjectParameter("fechaDocto", fechaDocto) :
                new ObjectParameter("fechaDocto", typeof(System.DateTime));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("tipoReferencia", tipoReferencia) :
                new ObjectParameter("tipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("numeroReferencia", numeroReferencia) :
                new ObjectParameter("numeroReferencia", typeof(string));
    
            var fechaReferenciaParameter = fechaReferencia.HasValue ?
                new ObjectParameter("fechaReferencia", fechaReferencia) :
                new ObjectParameter("fechaReferencia", typeof(System.DateTime));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("linea", linea) :
                new ObjectParameter("linea", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("codigoArticulo", codigoArticulo) :
                new ObjectParameter("codigoArticulo", typeof(string));
    
            var codigoOriginalParameter = codigoOriginal != null ?
                new ObjectParameter("codigoOriginal", codigoOriginal) :
                new ObjectParameter("codigoOriginal", typeof(string));
    
            var unidadVentaParameter = unidadVenta != null ?
                new ObjectParameter("unidadVenta", unidadVenta) :
                new ObjectParameter("unidadVenta", typeof(string));
    
            var cantidadSolicitadaParameter = cantidadSolicitada.HasValue ?
                new ObjectParameter("cantidadSolicitada", cantidadSolicitada) :
                new ObjectParameter("cantidadSolicitada", typeof(int));
    
            var itemReferenciaParameter = itemReferencia.HasValue ?
                new ObjectParameter("ItemReferencia", itemReferencia) :
                new ObjectParameter("ItemReferencia", typeof(int));
    
            var loteSerieSolParameter = loteSerieSol != null ?
                new ObjectParameter("loteSerieSol", loteSerieSol) :
                new ObjectParameter("loteSerieSol", typeof(string));
    
            var fechaVenctoSolParameter = fechaVenctoSol.HasValue ?
                new ObjectParameter("fechaVenctoSol", fechaVenctoSol) :
                new ObjectParameter("fechaVenctoSol", typeof(System.DateTime));
    
            var cantidadDespachadaParameter = cantidadDespachada.HasValue ?
                new ObjectParameter("cantidadDespachada", cantidadDespachada) :
                new ObjectParameter("cantidadDespachada", typeof(int));
    
            var loteSerieDespParameter = loteSerieDesp != null ?
                new ObjectParameter("loteSerieDesp", loteSerieDesp) :
                new ObjectParameter("loteSerieDesp", typeof(string));
    
            var fechaVenctoDespParameter = fechaVenctoDesp.HasValue ?
                new ObjectParameter("fechaVenctoDesp", fechaVenctoDesp) :
                new ObjectParameter("fechaVenctoDesp", typeof(System.DateTime));
    
            var huIdParameter = huId.HasValue ?
                new ObjectParameter("huId", huId) :
                new ObjectParameter("huId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_Entrega_Conforme_Tienda_Result>("sp_in_API_Entrega_Conforme_Tienda", empIdParameter, colaPickIdParameter, intNameParameter, fechaHoraParameter, solDespIdParameter, fechaProcesoParameter, tipoDocumentoParameter, numeroDoctoParameter, fechaDoctoParameter, tipoReferenciaParameter, numeroReferenciaParameter, fechaReferenciaParameter, lineaParameter, codigoArticuloParameter, codigoOriginalParameter, unidadVentaParameter, cantidadSolicitadaParameter, itemReferenciaParameter, loteSerieSolParameter, fechaVenctoSolParameter, cantidadDespachadaParameter, loteSerieDespParameter, fechaVenctoDespParameter, huIdParameter);
        }
    
        public virtual ObjectResult<sp_in_API_SolRecepJson_Result> sp_in_API_SolRecepJson(string proceso, Nullable<int> empId, Nullable<int> tipoSolicitud, string tipoReferencia, string numeroReferencia, Nullable<System.DateTime> fechaReferencia, Nullable<System.DateTime> fechaProceso, Nullable<int> tipoDocumento, string numeroDocto, Nullable<System.DateTime> fechaDocto, string glosa, string cliente, string razonSocial, string telefono, string email, string direccion, string contacto, Nullable<int> rutaDespacho, string region, string comuna, string ciudad, string vendedor)
        {
            var procesoParameter = proceso != null ?
                new ObjectParameter("Proceso", proceso) :
                new ObjectParameter("Proceso", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var tipoSolicitudParameter = tipoSolicitud.HasValue ?
                new ObjectParameter("TipoSolicitud", tipoSolicitud) :
                new ObjectParameter("TipoSolicitud", typeof(int));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(string));
    
            var fechaReferenciaParameter = fechaReferencia.HasValue ?
                new ObjectParameter("FechaReferencia", fechaReferencia) :
                new ObjectParameter("FechaReferencia", typeof(System.DateTime));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("FechaProceso", fechaProceso) :
                new ObjectParameter("FechaProceso", typeof(System.DateTime));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(int));
    
            var numeroDoctoParameter = numeroDocto != null ?
                new ObjectParameter("NumeroDocto", numeroDocto) :
                new ObjectParameter("NumeroDocto", typeof(string));
    
            var fechaDoctoParameter = fechaDocto.HasValue ?
                new ObjectParameter("FechaDocto", fechaDocto) :
                new ObjectParameter("FechaDocto", typeof(System.DateTime));
    
            var glosaParameter = glosa != null ?
                new ObjectParameter("Glosa", glosa) :
                new ObjectParameter("Glosa", typeof(string));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("Contacto", contacto) :
                new ObjectParameter("Contacto", typeof(string));
    
            var rutaDespachoParameter = rutaDespacho.HasValue ?
                new ObjectParameter("RutaDespacho", rutaDespacho) :
                new ObjectParameter("RutaDespacho", typeof(int));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var comunaParameter = comuna != null ?
                new ObjectParameter("Comuna", comuna) :
                new ObjectParameter("Comuna", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var vendedorParameter = vendedor != null ?
                new ObjectParameter("Vendedor", vendedor) :
                new ObjectParameter("Vendedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_SolRecepJson_Result>("sp_in_API_SolRecepJson", procesoParameter, empIdParameter, tipoSolicitudParameter, tipoReferenciaParameter, numeroReferenciaParameter, fechaReferenciaParameter, fechaProcesoParameter, tipoDocumentoParameter, numeroDoctoParameter, fechaDoctoParameter, glosaParameter, clienteParameter, razonSocialParameter, telefonoParameter, emailParameter, direccionParameter, contactoParameter, rutaDespachoParameter, regionParameter, comunaParameter, ciudadParameter, vendedorParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_TrackingPicking_Result> sp_sel_API_TrackingPicking(Nullable<int> empId, string userName, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaTermino, Nullable<int> estado, Nullable<int> numeroRef, Nullable<int> numeroDocto, string rutCliente)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaTerminoParameter = fechaTermino.HasValue ?
                new ObjectParameter("FechaTermino", fechaTermino) :
                new ObjectParameter("FechaTermino", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var numeroRefParameter = numeroRef.HasValue ?
                new ObjectParameter("NumeroRef", numeroRef) :
                new ObjectParameter("NumeroRef", typeof(int));
    
            var numeroDoctoParameter = numeroDocto.HasValue ?
                new ObjectParameter("NumeroDocto", numeroDocto) :
                new ObjectParameter("NumeroDocto", typeof(int));
    
            var rutClienteParameter = rutCliente != null ?
                new ObjectParameter("RutCliente", rutCliente) :
                new ObjectParameter("RutCliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_TrackingPicking_Result>("sp_sel_API_TrackingPicking", empIdParameter, userNameParameter, fechaInicioParameter, fechaTerminoParameter, estadoParameter, numeroRefParameter, numeroDoctoParameter, rutClienteParameter);
        }
    
        public virtual ObjectResult<sp_in_API_SolDespachoAdj_Result> sp_in_API_SolDespachoAdj(string userName, Nullable<int> solDespId, string archivo)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var solDespIdParameter = solDespId.HasValue ?
                new ObjectParameter("SolDespId", solDespId) :
                new ObjectParameter("SolDespId", typeof(int));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_SolDespachoAdj_Result>("sp_in_API_SolDespachoAdj", userNameParameter, solDespIdParameter, archivoParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_TrackingPickingDet_Result> sp_sel_API_TrackingPickingDet(Nullable<int> genPickId)
        {
            var genPickIdParameter = genPickId.HasValue ?
                new ObjectParameter("GenPickId", genPickId) :
                new ObjectParameter("GenPickId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_TrackingPickingDet_Result>("sp_sel_API_TrackingPickingDet", genPickIdParameter);
        }
    
        public virtual ObjectResult<sp_upd_cambEstado_SDD_Api_Result> sp_upd_cambEstado_SDD_Api(Nullable<int> empId, string usuario, Nullable<int> numeroReferencia, Nullable<int> sDD, Nullable<int> estado)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia.HasValue ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(int));
    
            var sDDParameter = sDD.HasValue ?
                new ObjectParameter("SDD", sDD) :
                new ObjectParameter("SDD", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_upd_cambEstado_SDD_Api_Result>("sp_upd_cambEstado_SDD_Api", empIdParameter, usuarioParameter, numeroReferenciaParameter, sDDParameter, estadoParameter);
        }
    
        public virtual ObjectResult<sp_upd_cambEstado_SDR_Api_Result> sp_upd_cambEstado_SDR_Api(Nullable<int> empId, string usuario, Nullable<int> numeroReferencia, Nullable<int> sDR, Nullable<int> estado)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia.HasValue ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(int));
    
            var sDRParameter = sDR.HasValue ?
                new ObjectParameter("SDR", sDR) :
                new ObjectParameter("SDR", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_upd_cambEstado_SDR_Api_Result>("sp_upd_cambEstado_SDR_Api", empIdParameter, usuarioParameter, numeroReferenciaParameter, sDRParameter, estadoParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_Consulta_Stock_Bodega_Ubicacion_Result> sp_sel_API_Consulta_Stock_Bodega_Ubicacion(Nullable<int> empId, Nullable<int> lineaProducto, string tipoProducto, string codigoArticulo, string usuario)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var lineaProductoParameter = lineaProducto.HasValue ?
                new ObjectParameter("LineaProducto", lineaProducto) :
                new ObjectParameter("LineaProducto", typeof(int));
    
            var tipoProductoParameter = tipoProducto != null ?
                new ObjectParameter("TipoProducto", tipoProducto) :
                new ObjectParameter("TipoProducto", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_Consulta_Stock_Bodega_Ubicacion_Result>("sp_sel_API_Consulta_Stock_Bodega_Ubicacion", empIdParameter, lineaProductoParameter, tipoProductoParameter, codigoArticuloParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<sp_in_API_Webhook_Bsale_Result> sp_in_API_Webhook_Bsale(string detalle)
        {
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_Webhook_Bsale_Result>("sp_in_API_Webhook_Bsale", detalleParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_IntegraConfirmacionesCSV_Result> sp_sel_API_IntegraConfirmacionesCSV(Nullable<int> empid, string nombreproceso, Nullable<int> limit, Nullable<int> rowset)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var nombreprocesoParameter = nombreproceso != null ?
                new ObjectParameter("nombreproceso", nombreproceso) :
                new ObjectParameter("nombreproceso", typeof(string));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("limit", limit) :
                new ObjectParameter("limit", typeof(int));
    
            var rowsetParameter = rowset.HasValue ?
                new ObjectParameter("rowset", rowset) :
                new ObjectParameter("rowset", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_IntegraConfirmacionesCSV_Result>("sp_sel_API_IntegraConfirmacionesCSV", empidParameter, nombreprocesoParameter, limitParameter, rowsetParameter);
        }
    
        public virtual ObjectResult<sp_proc_API_SolRecepcionValidaJson_Result> sp_proc_API_SolRecepcionValidaJson(Nullable<decimal> solRecepId, string listaCodigoArticulo, Nullable<int> cantidadItems)
        {
            var solRecepIdParameter = solRecepId.HasValue ?
                new ObjectParameter("SolRecepId", solRecepId) :
                new ObjectParameter("SolRecepId", typeof(decimal));
    
            var listaCodigoArticuloParameter = listaCodigoArticulo != null ?
                new ObjectParameter("ListaCodigoArticulo", listaCodigoArticulo) :
                new ObjectParameter("ListaCodigoArticulo", typeof(string));
    
            var cantidadItemsParameter = cantidadItems.HasValue ?
                new ObjectParameter("CantidadItems", cantidadItems) :
                new ObjectParameter("CantidadItems", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_proc_API_SolRecepcionValidaJson_Result>("sp_proc_API_SolRecepcionValidaJson", solRecepIdParameter, listaCodigoArticuloParameter, cantidadItemsParameter);
        }
    
        public virtual ObjectResult<sp_proc_API_SolDespachoValidaJson_Result> sp_proc_API_SolDespachoValidaJson(Nullable<int> empid, string userName, Nullable<decimal> solDespId, string listaCodigoArticulo, Nullable<int> cantidadItems)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var solDespIdParameter = solDespId.HasValue ?
                new ObjectParameter("SolDespId", solDespId) :
                new ObjectParameter("SolDespId", typeof(decimal));
    
            var listaCodigoArticuloParameter = listaCodigoArticulo != null ?
                new ObjectParameter("ListaCodigoArticulo", listaCodigoArticulo) :
                new ObjectParameter("ListaCodigoArticulo", typeof(string));
    
            var cantidadItemsParameter = cantidadItems.HasValue ?
                new ObjectParameter("CantidadItems", cantidadItems) :
                new ObjectParameter("CantidadItems", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_proc_API_SolDespachoValidaJson_Result>("sp_proc_API_SolDespachoValidaJson", empidParameter, userNameParameter, solDespIdParameter, listaCodigoArticuloParameter, cantidadItemsParameter);
        }
    
        public virtual ObjectResult<sp_in_API_ArticulosUMedidasJson_Result> sp_in_API_ArticulosUMedidasJson(Nullable<int> empId, string codigoArticulo, string usuario, string unidadMedida, Nullable<decimal> pesoNeto, Nullable<decimal> pesoBruto, Nullable<decimal> ancho, Nullable<decimal> alto, Nullable<decimal> profundidad, Nullable<decimal> volumen, Nullable<decimal> factor, Nullable<int> uNBase, Nullable<decimal> uNTotal, Nullable<int> tiempoRecep, Nullable<int> tiempoDesp)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var unidadMedidaParameter = unidadMedida != null ?
                new ObjectParameter("UnidadMedida", unidadMedida) :
                new ObjectParameter("UnidadMedida", typeof(string));
    
            var pesoNetoParameter = pesoNeto.HasValue ?
                new ObjectParameter("PesoNeto", pesoNeto) :
                new ObjectParameter("PesoNeto", typeof(decimal));
    
            var pesoBrutoParameter = pesoBruto.HasValue ?
                new ObjectParameter("PesoBruto", pesoBruto) :
                new ObjectParameter("PesoBruto", typeof(decimal));
    
            var anchoParameter = ancho.HasValue ?
                new ObjectParameter("Ancho", ancho) :
                new ObjectParameter("Ancho", typeof(decimal));
    
            var altoParameter = alto.HasValue ?
                new ObjectParameter("Alto", alto) :
                new ObjectParameter("Alto", typeof(decimal));
    
            var profundidadParameter = profundidad.HasValue ?
                new ObjectParameter("Profundidad", profundidad) :
                new ObjectParameter("Profundidad", typeof(decimal));
    
            var volumenParameter = volumen.HasValue ?
                new ObjectParameter("Volumen", volumen) :
                new ObjectParameter("Volumen", typeof(decimal));
    
            var factorParameter = factor.HasValue ?
                new ObjectParameter("Factor", factor) :
                new ObjectParameter("Factor", typeof(decimal));
    
            var uNBaseParameter = uNBase.HasValue ?
                new ObjectParameter("UNBase", uNBase) :
                new ObjectParameter("UNBase", typeof(int));
    
            var uNTotalParameter = uNTotal.HasValue ?
                new ObjectParameter("UNTotal", uNTotal) :
                new ObjectParameter("UNTotal", typeof(decimal));
    
            var tiempoRecepParameter = tiempoRecep.HasValue ?
                new ObjectParameter("TiempoRecep", tiempoRecep) :
                new ObjectParameter("TiempoRecep", typeof(int));
    
            var tiempoDespParameter = tiempoDesp.HasValue ?
                new ObjectParameter("TiempoDesp", tiempoDesp) :
                new ObjectParameter("TiempoDesp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_ArticulosUMedidasJson_Result>("sp_in_API_ArticulosUMedidasJson", empIdParameter, codigoArticuloParameter, usuarioParameter, unidadMedidaParameter, pesoNetoParameter, pesoBrutoParameter, anchoParameter, altoParameter, profundidadParameter, volumenParameter, factorParameter, uNBaseParameter, uNTotalParameter, tiempoRecepParameter, tiempoDespParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_Consulta_Stock_Bodega_Result> sp_sel_API_Consulta_Stock_Bodega(Nullable<int> empId, Nullable<int> lineaProducto, string tipoProducto, string codigoArticulo, string usuario)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var lineaProductoParameter = lineaProducto.HasValue ?
                new ObjectParameter("LineaProducto", lineaProducto) :
                new ObjectParameter("LineaProducto", typeof(int));
    
            var tipoProductoParameter = tipoProducto != null ?
                new ObjectParameter("TipoProducto", tipoProducto) :
                new ObjectParameter("TipoProducto", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_Consulta_Stock_Bodega_Result>("sp_sel_API_Consulta_Stock_Bodega", empIdParameter, lineaProductoParameter, tipoProductoParameter, codigoArticuloParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_ArticulosJson_Result> sp_sel_API_ArticulosJson(Nullable<int> empId, string codigoArticulo, string descripArt, Nullable<int> limit, Nullable<int> rowset)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var descripArtParameter = descripArt != null ?
                new ObjectParameter("DescripArt", descripArt) :
                new ObjectParameter("DescripArt", typeof(string));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var rowsetParameter = rowset.HasValue ?
                new ObjectParameter("Rowset", rowset) :
                new ObjectParameter("Rowset", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_ArticulosJson_Result>("sp_sel_API_ArticulosJson", empIdParameter, codigoArticuloParameter, descripArtParameter, limitParameter, rowsetParameter);
        }
    
        public virtual ObjectResult<sp_in_API_Image_Result> sp_in_API_Image(string userName, Nullable<int> empId, string nombreImagen)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var nombreImagenParameter = nombreImagen != null ?
                new ObjectParameter("NombreImagen", nombreImagen) :
                new ObjectParameter("NombreImagen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_Image_Result>("sp_in_API_Image", userNameParameter, empIdParameter, nombreImagenParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_Consulta_Movto_Transfarma_Result> sp_sel_API_Consulta_Movto_Transfarma(Nullable<int> empId, string codigoArticulo)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_Consulta_Movto_Transfarma_Result>("sp_sel_API_Consulta_Movto_Transfarma", empIdParameter, codigoArticuloParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_Stock_Material_Transfarma_Result> sp_sel_API_Stock_Material_Transfarma(Nullable<int> empId, string codigoArticulo)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_Stock_Material_Transfarma_Result>("sp_sel_API_Stock_Material_Transfarma", empIdParameter, codigoArticuloParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_Confirma_Desp_Result> sp_sel_API_Confirma_Desp(string key, Nullable<int> empId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaTermino, Nullable<decimal> solDespId, string tipoReferencia, string numeroReferencia, string rutCliente, Nullable<int> limit, Nullable<int> rowset)
        {
            var keyParameter = key != null ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaTerminoParameter = fechaTermino.HasValue ?
                new ObjectParameter("FechaTermino", fechaTermino) :
                new ObjectParameter("FechaTermino", typeof(System.DateTime));
    
            var solDespIdParameter = solDespId.HasValue ?
                new ObjectParameter("SolDespId", solDespId) :
                new ObjectParameter("SolDespId", typeof(decimal));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(string));
    
            var rutClienteParameter = rutCliente != null ?
                new ObjectParameter("RutCliente", rutCliente) :
                new ObjectParameter("RutCliente", typeof(string));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var rowsetParameter = rowset.HasValue ?
                new ObjectParameter("Rowset", rowset) :
                new ObjectParameter("Rowset", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_Confirma_Desp_Result>("sp_sel_API_Confirma_Desp", keyParameter, empIdParameter, fechaInicioParameter, fechaTerminoParameter, solDespIdParameter, tipoReferenciaParameter, numeroReferenciaParameter, rutClienteParameter, limitParameter, rowsetParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_ArticulosJsonTransfarma_Result> sp_sel_API_ArticulosJsonTransfarma(Nullable<int> empId, string codigoArticulo, string descripArt, Nullable<int> limit, Nullable<int> rowset)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var descripArtParameter = descripArt != null ?
                new ObjectParameter("DescripArt", descripArt) :
                new ObjectParameter("DescripArt", typeof(string));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var rowsetParameter = rowset.HasValue ?
                new ObjectParameter("Rowset", rowset) :
                new ObjectParameter("Rowset", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_ArticulosJsonTransfarma_Result>("sp_sel_API_ArticulosJsonTransfarma", empIdParameter, codigoArticuloParameter, descripArtParameter, limitParameter, rowsetParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_IntegraConfirmacionesJson_Result> sp_sel_API_IntegraConfirmacionesJson(Nullable<int> empid, string nombreProceso, Nullable<int> limit, Nullable<int> rowset)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(int));
    
            var nombreProcesoParameter = nombreProceso != null ?
                new ObjectParameter("NombreProceso", nombreProceso) :
                new ObjectParameter("NombreProceso", typeof(string));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var rowsetParameter = rowset.HasValue ?
                new ObjectParameter("Rowset", rowset) :
                new ObjectParameter("Rowset", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_IntegraConfirmacionesJson_Result>("sp_sel_API_IntegraConfirmacionesJson", empidParameter, nombreProcesoParameter, limitParameter, rowsetParameter);
        }
    
        public virtual ObjectResult<sp_upd_API_IntegraConfirmaciones_Result> sp_upd_API_IntegraConfirmaciones(Nullable<int> intId)
        {
            var intIdParameter = intId.HasValue ?
                new ObjectParameter("IntId", intId) :
                new ObjectParameter("IntId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_upd_API_IntegraConfirmaciones_Result>("sp_upd_API_IntegraConfirmaciones", intIdParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_Confirma_Recep_Result> sp_sel_API_Confirma_Recep(string key, Nullable<int> empId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaTermino, Nullable<int> solRecepId, string tipoReferencia, string numeroReferencia, string rutProveedor, Nullable<int> limit, Nullable<int> rowset)
        {
            var keyParameter = key != null ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaTerminoParameter = fechaTermino.HasValue ?
                new ObjectParameter("FechaTermino", fechaTermino) :
                new ObjectParameter("FechaTermino", typeof(System.DateTime));
    
            var solRecepIdParameter = solRecepId.HasValue ?
                new ObjectParameter("SolRecepId", solRecepId) :
                new ObjectParameter("SolRecepId", typeof(int));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(string));
    
            var rutProveedorParameter = rutProveedor != null ?
                new ObjectParameter("RutProveedor", rutProveedor) :
                new ObjectParameter("RutProveedor", typeof(string));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var rowsetParameter = rowset.HasValue ?
                new ObjectParameter("Rowset", rowset) :
                new ObjectParameter("Rowset", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_Confirma_Recep_Result>("sp_sel_API_Confirma_Recep", keyParameter, empIdParameter, fechaInicioParameter, fechaTerminoParameter, solRecepIdParameter, tipoReferenciaParameter, numeroReferenciaParameter, rutProveedorParameter, limitParameter, rowsetParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_Consulta_Stock_Result> sp_sel_API_Consulta_Stock(Nullable<int> empId, Nullable<int> lineaProducto, string tipoProducto, string codigoArticulo, string usuario, Nullable<int> codigoBodega)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var lineaProductoParameter = lineaProducto.HasValue ?
                new ObjectParameter("LineaProducto", lineaProducto) :
                new ObjectParameter("LineaProducto", typeof(int));
    
            var tipoProductoParameter = tipoProducto != null ?
                new ObjectParameter("TipoProducto", tipoProducto) :
                new ObjectParameter("TipoProducto", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var codigoBodegaParameter = codigoBodega.HasValue ?
                new ObjectParameter("CodigoBodega", codigoBodega) :
                new ObjectParameter("CodigoBodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_Consulta_Stock_Result>("sp_sel_API_Consulta_Stock", empIdParameter, lineaProductoParameter, tipoProductoParameter, codigoArticuloParameter, usuarioParameter, codigoBodegaParameter);
        }
    
        public virtual ObjectResult<sp_upd_API_ReferenciaSDR_Result> sp_upd_API_ReferenciaSDR(Nullable<int> empId, string usuarioDig, Nullable<System.DateTime> fechaProceso, Nullable<int> tipoSolicitud, Nullable<int> codigoBodega, string comprador, string rutProveedor, string razonSocial, string tipoReferencia, string numeroReferencia, Nullable<System.DateTime> fechaReferencia, string tipoReferencia2, string numeroReferencia2, Nullable<System.DateTime> fechaReferencia2, string glosa, string dato1, string dato2, string dato3)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var usuarioDigParameter = usuarioDig != null ?
                new ObjectParameter("UsuarioDig", usuarioDig) :
                new ObjectParameter("UsuarioDig", typeof(string));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("FechaProceso", fechaProceso) :
                new ObjectParameter("FechaProceso", typeof(System.DateTime));
    
            var tipoSolicitudParameter = tipoSolicitud.HasValue ?
                new ObjectParameter("TipoSolicitud", tipoSolicitud) :
                new ObjectParameter("TipoSolicitud", typeof(int));
    
            var codigoBodegaParameter = codigoBodega.HasValue ?
                new ObjectParameter("CodigoBodega", codigoBodega) :
                new ObjectParameter("CodigoBodega", typeof(int));
    
            var compradorParameter = comprador != null ?
                new ObjectParameter("Comprador", comprador) :
                new ObjectParameter("Comprador", typeof(string));
    
            var rutProveedorParameter = rutProveedor != null ?
                new ObjectParameter("RutProveedor", rutProveedor) :
                new ObjectParameter("RutProveedor", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(string));
    
            var fechaReferenciaParameter = fechaReferencia.HasValue ?
                new ObjectParameter("FechaReferencia", fechaReferencia) :
                new ObjectParameter("FechaReferencia", typeof(System.DateTime));
    
            var tipoReferencia2Parameter = tipoReferencia2 != null ?
                new ObjectParameter("TipoReferencia2", tipoReferencia2) :
                new ObjectParameter("TipoReferencia2", typeof(string));
    
            var numeroReferencia2Parameter = numeroReferencia2 != null ?
                new ObjectParameter("NumeroReferencia2", numeroReferencia2) :
                new ObjectParameter("NumeroReferencia2", typeof(string));
    
            var fechaReferencia2Parameter = fechaReferencia2.HasValue ?
                new ObjectParameter("FechaReferencia2", fechaReferencia2) :
                new ObjectParameter("FechaReferencia2", typeof(System.DateTime));
    
            var glosaParameter = glosa != null ?
                new ObjectParameter("Glosa", glosa) :
                new ObjectParameter("Glosa", typeof(string));
    
            var dato1Parameter = dato1 != null ?
                new ObjectParameter("Dato1", dato1) :
                new ObjectParameter("Dato1", typeof(string));
    
            var dato2Parameter = dato2 != null ?
                new ObjectParameter("Dato2", dato2) :
                new ObjectParameter("Dato2", typeof(string));
    
            var dato3Parameter = dato3 != null ?
                new ObjectParameter("Dato3", dato3) :
                new ObjectParameter("Dato3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_upd_API_ReferenciaSDR_Result>("sp_upd_API_ReferenciaSDR", empIdParameter, usuarioDigParameter, fechaProcesoParameter, tipoSolicitudParameter, codigoBodegaParameter, compradorParameter, rutProveedorParameter, razonSocialParameter, tipoReferenciaParameter, numeroReferenciaParameter, fechaReferenciaParameter, tipoReferencia2Parameter, numeroReferencia2Parameter, fechaReferencia2Parameter, glosaParameter, dato1Parameter, dato2Parameter, dato3Parameter);
        }
    
        public virtual ObjectResult<sp_upd_API_ReferenciaSDRDet_Result> sp_upd_API_ReferenciaSDRDet(Nullable<decimal> solRecepId, string codigoArticulo, string unidadCompra, Nullable<decimal> cantidad, Nullable<int> itemReferencia, Nullable<int> itemReferencia2)
        {
            var solRecepIdParameter = solRecepId.HasValue ?
                new ObjectParameter("SolRecepId", solRecepId) :
                new ObjectParameter("SolRecepId", typeof(decimal));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var unidadCompraParameter = unidadCompra != null ?
                new ObjectParameter("UnidadCompra", unidadCompra) :
                new ObjectParameter("UnidadCompra", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var itemReferenciaParameter = itemReferencia.HasValue ?
                new ObjectParameter("ItemReferencia", itemReferencia) :
                new ObjectParameter("ItemReferencia", typeof(int));
    
            var itemReferencia2Parameter = itemReferencia2.HasValue ?
                new ObjectParameter("ItemReferencia2", itemReferencia2) :
                new ObjectParameter("ItemReferencia2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_upd_API_ReferenciaSDRDet_Result>("sp_upd_API_ReferenciaSDRDet", solRecepIdParameter, codigoArticuloParameter, unidadCompraParameter, cantidadParameter, itemReferenciaParameter, itemReferencia2Parameter);
        }
    
        public virtual ObjectResult<sp_upd_API_AsignaDocumento_Result> sp_upd_API_AsignaDocumento(Nullable<int> empId, string usuario, string tipoReferencia, string numeroReferencia, Nullable<decimal> colaPickId, string documentos)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(string));
    
            var colaPickIdParameter = colaPickId.HasValue ?
                new ObjectParameter("ColaPickId", colaPickId) :
                new ObjectParameter("ColaPickId", typeof(decimal));
    
            var documentosParameter = documentos != null ?
                new ObjectParameter("Documentos", documentos) :
                new ObjectParameter("Documentos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_upd_API_AsignaDocumento_Result>("sp_upd_API_AsignaDocumento", empIdParameter, usuarioParameter, tipoReferenciaParameter, numeroReferenciaParameter, colaPickIdParameter, documentosParameter);
        }
    
        public virtual ObjectResult<sp_in_API_Webhook_Tracking_Enviame_Result> sp_in_API_Webhook_Tracking_Enviame(string detalle)
        {
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_Webhook_Tracking_Enviame_Result>("sp_in_API_Webhook_Tracking_Enviame", detalleParameter);
        }
    
        public virtual ObjectResult<sp_in_API_SolRecepcionJson_Result> sp_in_API_SolRecepcionJson(Nullable<int> empId, string usuarioDig, Nullable<System.DateTime> fechaProceso, Nullable<int> tipoSolicitud, Nullable<int> codigoBodega, string comprador, string rutProveedor, string razonSocial, string tipoReferencia, string numeroReferencia, Nullable<System.DateTime> fechaReferencia, string glosa, string dato1, string dato2, string dato3, Nullable<decimal> valor1, Nullable<decimal> valor2, Nullable<decimal> valor3, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, Nullable<System.DateTime> fecha3)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var usuarioDigParameter = usuarioDig != null ?
                new ObjectParameter("UsuarioDig", usuarioDig) :
                new ObjectParameter("UsuarioDig", typeof(string));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("FechaProceso", fechaProceso) :
                new ObjectParameter("FechaProceso", typeof(System.DateTime));
    
            var tipoSolicitudParameter = tipoSolicitud.HasValue ?
                new ObjectParameter("TipoSolicitud", tipoSolicitud) :
                new ObjectParameter("TipoSolicitud", typeof(int));
    
            var codigoBodegaParameter = codigoBodega.HasValue ?
                new ObjectParameter("CodigoBodega", codigoBodega) :
                new ObjectParameter("CodigoBodega", typeof(int));
    
            var compradorParameter = comprador != null ?
                new ObjectParameter("Comprador", comprador) :
                new ObjectParameter("Comprador", typeof(string));
    
            var rutProveedorParameter = rutProveedor != null ?
                new ObjectParameter("RutProveedor", rutProveedor) :
                new ObjectParameter("RutProveedor", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(string));
    
            var fechaReferenciaParameter = fechaReferencia.HasValue ?
                new ObjectParameter("FechaReferencia", fechaReferencia) :
                new ObjectParameter("FechaReferencia", typeof(System.DateTime));
    
            var glosaParameter = glosa != null ?
                new ObjectParameter("Glosa", glosa) :
                new ObjectParameter("Glosa", typeof(string));
    
            var dato1Parameter = dato1 != null ?
                new ObjectParameter("Dato1", dato1) :
                new ObjectParameter("Dato1", typeof(string));
    
            var dato2Parameter = dato2 != null ?
                new ObjectParameter("Dato2", dato2) :
                new ObjectParameter("Dato2", typeof(string));
    
            var dato3Parameter = dato3 != null ?
                new ObjectParameter("Dato3", dato3) :
                new ObjectParameter("Dato3", typeof(string));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("Valor1", valor1) :
                new ObjectParameter("Valor1", typeof(decimal));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("Valor2", valor2) :
                new ObjectParameter("Valor2", typeof(decimal));
    
            var valor3Parameter = valor3.HasValue ?
                new ObjectParameter("Valor3", valor3) :
                new ObjectParameter("Valor3", typeof(decimal));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("Fecha1", fecha1) :
                new ObjectParameter("Fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("Fecha2", fecha2) :
                new ObjectParameter("Fecha2", typeof(System.DateTime));
    
            var fecha3Parameter = fecha3.HasValue ?
                new ObjectParameter("Fecha3", fecha3) :
                new ObjectParameter("Fecha3", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_SolRecepcionJson_Result>("sp_in_API_SolRecepcionJson", empIdParameter, usuarioDigParameter, fechaProcesoParameter, tipoSolicitudParameter, codigoBodegaParameter, compradorParameter, rutProveedorParameter, razonSocialParameter, tipoReferenciaParameter, numeroReferenciaParameter, fechaReferenciaParameter, glosaParameter, dato1Parameter, dato2Parameter, dato3Parameter, valor1Parameter, valor2Parameter, valor3Parameter, fecha1Parameter, fecha2Parameter, fecha3Parameter);
        }
    
        public virtual ObjectResult<sp_in_API_LogAPI_Result> sp_in_API_LogAPI(string nombreProceso, string referencia, string mensaje, string jSON)
        {
            var nombreProcesoParameter = nombreProceso != null ?
                new ObjectParameter("NombreProceso", nombreProceso) :
                new ObjectParameter("NombreProceso", typeof(string));
    
            var referenciaParameter = referencia != null ?
                new ObjectParameter("Referencia", referencia) :
                new ObjectParameter("Referencia", typeof(string));
    
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("Mensaje", mensaje) :
                new ObjectParameter("Mensaje", typeof(string));
    
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_LogAPI_Result>("sp_in_API_LogAPI", nombreProcesoParameter, referenciaParameter, mensajeParameter, jSONParameter);
        }
    
        public virtual ObjectResult<sp_in_API_ArticulosJson_Result> sp_in_API_ArticulosJson(Nullable<int> empId, string codigoArticulo, string descripArt, string descripTecnica, string descripCorta, Nullable<int> lineaProducto, string tipoModelo, Nullable<int> tipo, Nullable<System.DateTime> vigenciaDesde, Nullable<System.DateTime> vigenciaHasta, string rotacion, string codigoFabrica, Nullable<int> usaSerie, Nullable<int> usaLote, string eAN13, string dUN14, string unidadMedidaCompra, string unidadMedidaVenta, string codigoProveedor, string marca, string usuario, string codigoExt, string glosaLineaProducto, string dato1, string dato2, string dato3, Nullable<decimal> valor1, Nullable<decimal> valor2, Nullable<decimal> valor3, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, Nullable<System.DateTime> fecha3)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var descripArtParameter = descripArt != null ?
                new ObjectParameter("DescripArt", descripArt) :
                new ObjectParameter("DescripArt", typeof(string));
    
            var descripTecnicaParameter = descripTecnica != null ?
                new ObjectParameter("DescripTecnica", descripTecnica) :
                new ObjectParameter("DescripTecnica", typeof(string));
    
            var descripCortaParameter = descripCorta != null ?
                new ObjectParameter("DescripCorta", descripCorta) :
                new ObjectParameter("DescripCorta", typeof(string));
    
            var lineaProductoParameter = lineaProducto.HasValue ?
                new ObjectParameter("LineaProducto", lineaProducto) :
                new ObjectParameter("LineaProducto", typeof(int));
    
            var tipoModeloParameter = tipoModelo != null ?
                new ObjectParameter("TipoModelo", tipoModelo) :
                new ObjectParameter("TipoModelo", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            var vigenciaDesdeParameter = vigenciaDesde.HasValue ?
                new ObjectParameter("VigenciaDesde", vigenciaDesde) :
                new ObjectParameter("VigenciaDesde", typeof(System.DateTime));
    
            var vigenciaHastaParameter = vigenciaHasta.HasValue ?
                new ObjectParameter("VigenciaHasta", vigenciaHasta) :
                new ObjectParameter("VigenciaHasta", typeof(System.DateTime));
    
            var rotacionParameter = rotacion != null ?
                new ObjectParameter("Rotacion", rotacion) :
                new ObjectParameter("Rotacion", typeof(string));
    
            var codigoFabricaParameter = codigoFabrica != null ?
                new ObjectParameter("CodigoFabrica", codigoFabrica) :
                new ObjectParameter("CodigoFabrica", typeof(string));
    
            var usaSerieParameter = usaSerie.HasValue ?
                new ObjectParameter("UsaSerie", usaSerie) :
                new ObjectParameter("UsaSerie", typeof(int));
    
            var usaLoteParameter = usaLote.HasValue ?
                new ObjectParameter("UsaLote", usaLote) :
                new ObjectParameter("UsaLote", typeof(int));
    
            var eAN13Parameter = eAN13 != null ?
                new ObjectParameter("EAN13", eAN13) :
                new ObjectParameter("EAN13", typeof(string));
    
            var dUN14Parameter = dUN14 != null ?
                new ObjectParameter("DUN14", dUN14) :
                new ObjectParameter("DUN14", typeof(string));
    
            var unidadMedidaCompraParameter = unidadMedidaCompra != null ?
                new ObjectParameter("UnidadMedidaCompra", unidadMedidaCompra) :
                new ObjectParameter("UnidadMedidaCompra", typeof(string));
    
            var unidadMedidaVentaParameter = unidadMedidaVenta != null ?
                new ObjectParameter("UnidadMedidaVenta", unidadMedidaVenta) :
                new ObjectParameter("UnidadMedidaVenta", typeof(string));
    
            var codigoProveedorParameter = codigoProveedor != null ?
                new ObjectParameter("CodigoProveedor", codigoProveedor) :
                new ObjectParameter("CodigoProveedor", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var codigoExtParameter = codigoExt != null ?
                new ObjectParameter("CodigoExt", codigoExt) :
                new ObjectParameter("CodigoExt", typeof(string));
    
            var glosaLineaProductoParameter = glosaLineaProducto != null ?
                new ObjectParameter("GlosaLineaProducto", glosaLineaProducto) :
                new ObjectParameter("GlosaLineaProducto", typeof(string));
    
            var dato1Parameter = dato1 != null ?
                new ObjectParameter("Dato1", dato1) :
                new ObjectParameter("Dato1", typeof(string));
    
            var dato2Parameter = dato2 != null ?
                new ObjectParameter("Dato2", dato2) :
                new ObjectParameter("Dato2", typeof(string));
    
            var dato3Parameter = dato3 != null ?
                new ObjectParameter("Dato3", dato3) :
                new ObjectParameter("Dato3", typeof(string));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("Valor1", valor1) :
                new ObjectParameter("Valor1", typeof(decimal));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("Valor2", valor2) :
                new ObjectParameter("Valor2", typeof(decimal));
    
            var valor3Parameter = valor3.HasValue ?
                new ObjectParameter("Valor3", valor3) :
                new ObjectParameter("Valor3", typeof(decimal));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("Fecha1", fecha1) :
                new ObjectParameter("Fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("Fecha2", fecha2) :
                new ObjectParameter("Fecha2", typeof(System.DateTime));
    
            var fecha3Parameter = fecha3.HasValue ?
                new ObjectParameter("Fecha3", fecha3) :
                new ObjectParameter("Fecha3", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_ArticulosJson_Result>("sp_in_API_ArticulosJson", empIdParameter, codigoArticuloParameter, descripArtParameter, descripTecnicaParameter, descripCortaParameter, lineaProductoParameter, tipoModeloParameter, tipoParameter, vigenciaDesdeParameter, vigenciaHastaParameter, rotacionParameter, codigoFabricaParameter, usaSerieParameter, usaLoteParameter, eAN13Parameter, dUN14Parameter, unidadMedidaCompraParameter, unidadMedidaVentaParameter, codigoProveedorParameter, marcaParameter, usuarioParameter, codigoExtParameter, glosaLineaProductoParameter, dato1Parameter, dato2Parameter, dato3Parameter, valor1Parameter, valor2Parameter, valor3Parameter, fecha1Parameter, fecha2Parameter, fecha3Parameter);
        }
    
        public virtual ObjectResult<sp_GP_INT_RecibosASN_LPN_Result> sp_GP_INT_RecibosASN_LPN(string archivo, string userName, Nullable<System.DateTime> fechaProceso, string aux_Origen, Nullable<decimal> reciboAsnId)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("FechaProceso", fechaProceso) :
                new ObjectParameter("FechaProceso", typeof(System.DateTime));
    
            var aux_OrigenParameter = aux_Origen != null ?
                new ObjectParameter("Aux_Origen", aux_Origen) :
                new ObjectParameter("Aux_Origen", typeof(string));
    
            var reciboAsnIdParameter = reciboAsnId.HasValue ?
                new ObjectParameter("ReciboAsnId", reciboAsnId) :
                new ObjectParameter("ReciboAsnId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GP_INT_RecibosASN_LPN_Result>("sp_GP_INT_RecibosASN_LPN", archivoParameter, userNameParameter, fechaProcesoParameter, aux_OrigenParameter, reciboAsnIdParameter);
        }
    
        public virtual ObjectResult<sp_in_API_SolicitudASN_Result> sp_in_API_SolicitudASN(Nullable<int> empId, string userName, Nullable<System.DateTime> fechaCreacion, string origen, string rutProveedor, string aSN_CodigoBarraExt, string tipoReferencia, string numeroReferencia, string patente, string rutChofer, string nombreChofer, Nullable<int> estado, Nullable<decimal> valor1, Nullable<decimal> valor2, Nullable<decimal> valor3, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, Nullable<System.DateTime> fecha3, string dato1, string dato2, string dato3, Nullable<int> linea, string lPN_CodigoBarraExt, string tipoReferenciaDet, string numeroReferenciaDet, Nullable<int> tipoDocumento, string numeroDocumento, Nullable<System.DateTime> fechaDocumento, string codigoArticulo, Nullable<decimal> cantidad, Nullable<decimal> detValor1, Nullable<decimal> detValor2, Nullable<decimal> detValor3, Nullable<System.DateTime> detFecha1, Nullable<System.DateTime> detFecha2, Nullable<System.DateTime> detFecha3, string detDato1, string detDato2, string detDato3)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var rutProveedorParameter = rutProveedor != null ?
                new ObjectParameter("RutProveedor", rutProveedor) :
                new ObjectParameter("RutProveedor", typeof(string));
    
            var aSN_CodigoBarraExtParameter = aSN_CodigoBarraExt != null ?
                new ObjectParameter("ASN_CodigoBarraExt", aSN_CodigoBarraExt) :
                new ObjectParameter("ASN_CodigoBarraExt", typeof(string));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(string));
    
            var patenteParameter = patente != null ?
                new ObjectParameter("Patente", patente) :
                new ObjectParameter("Patente", typeof(string));
    
            var rutChoferParameter = rutChofer != null ?
                new ObjectParameter("RutChofer", rutChofer) :
                new ObjectParameter("RutChofer", typeof(string));
    
            var nombreChoferParameter = nombreChofer != null ?
                new ObjectParameter("NombreChofer", nombreChofer) :
                new ObjectParameter("NombreChofer", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("Valor1", valor1) :
                new ObjectParameter("Valor1", typeof(decimal));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("Valor2", valor2) :
                new ObjectParameter("Valor2", typeof(decimal));
    
            var valor3Parameter = valor3.HasValue ?
                new ObjectParameter("Valor3", valor3) :
                new ObjectParameter("Valor3", typeof(decimal));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("Fecha1", fecha1) :
                new ObjectParameter("Fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("Fecha2", fecha2) :
                new ObjectParameter("Fecha2", typeof(System.DateTime));
    
            var fecha3Parameter = fecha3.HasValue ?
                new ObjectParameter("Fecha3", fecha3) :
                new ObjectParameter("Fecha3", typeof(System.DateTime));
    
            var dato1Parameter = dato1 != null ?
                new ObjectParameter("Dato1", dato1) :
                new ObjectParameter("Dato1", typeof(string));
    
            var dato2Parameter = dato2 != null ?
                new ObjectParameter("Dato2", dato2) :
                new ObjectParameter("Dato2", typeof(string));
    
            var dato3Parameter = dato3 != null ?
                new ObjectParameter("Dato3", dato3) :
                new ObjectParameter("Dato3", typeof(string));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var lPN_CodigoBarraExtParameter = lPN_CodigoBarraExt != null ?
                new ObjectParameter("LPN_CodigoBarraExt", lPN_CodigoBarraExt) :
                new ObjectParameter("LPN_CodigoBarraExt", typeof(string));
    
            var tipoReferenciaDetParameter = tipoReferenciaDet != null ?
                new ObjectParameter("TipoReferenciaDet", tipoReferenciaDet) :
                new ObjectParameter("TipoReferenciaDet", typeof(string));
    
            var numeroReferenciaDetParameter = numeroReferenciaDet != null ?
                new ObjectParameter("NumeroReferenciaDet", numeroReferenciaDet) :
                new ObjectParameter("NumeroReferenciaDet", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(int));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var fechaDocumentoParameter = fechaDocumento.HasValue ?
                new ObjectParameter("FechaDocumento", fechaDocumento) :
                new ObjectParameter("FechaDocumento", typeof(System.DateTime));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var detValor1Parameter = detValor1.HasValue ?
                new ObjectParameter("DetValor1", detValor1) :
                new ObjectParameter("DetValor1", typeof(decimal));
    
            var detValor2Parameter = detValor2.HasValue ?
                new ObjectParameter("DetValor2", detValor2) :
                new ObjectParameter("DetValor2", typeof(decimal));
    
            var detValor3Parameter = detValor3.HasValue ?
                new ObjectParameter("DetValor3", detValor3) :
                new ObjectParameter("DetValor3", typeof(decimal));
    
            var detFecha1Parameter = detFecha1.HasValue ?
                new ObjectParameter("DetFecha1", detFecha1) :
                new ObjectParameter("DetFecha1", typeof(System.DateTime));
    
            var detFecha2Parameter = detFecha2.HasValue ?
                new ObjectParameter("DetFecha2", detFecha2) :
                new ObjectParameter("DetFecha2", typeof(System.DateTime));
    
            var detFecha3Parameter = detFecha3.HasValue ?
                new ObjectParameter("DetFecha3", detFecha3) :
                new ObjectParameter("DetFecha3", typeof(System.DateTime));
    
            var detDato1Parameter = detDato1 != null ?
                new ObjectParameter("DetDato1", detDato1) :
                new ObjectParameter("DetDato1", typeof(string));
    
            var detDato2Parameter = detDato2 != null ?
                new ObjectParameter("DetDato2", detDato2) :
                new ObjectParameter("DetDato2", typeof(string));
    
            var detDato3Parameter = detDato3 != null ?
                new ObjectParameter("DetDato3", detDato3) :
                new ObjectParameter("DetDato3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_SolicitudASN_Result>("sp_in_API_SolicitudASN", empIdParameter, userNameParameter, fechaCreacionParameter, origenParameter, rutProveedorParameter, aSN_CodigoBarraExtParameter, tipoReferenciaParameter, numeroReferenciaParameter, patenteParameter, rutChoferParameter, nombreChoferParameter, estadoParameter, valor1Parameter, valor2Parameter, valor3Parameter, fecha1Parameter, fecha2Parameter, fecha3Parameter, dato1Parameter, dato2Parameter, dato3Parameter, lineaParameter, lPN_CodigoBarraExtParameter, tipoReferenciaDetParameter, numeroReferenciaDetParameter, tipoDocumentoParameter, numeroDocumentoParameter, fechaDocumentoParameter, codigoArticuloParameter, cantidadParameter, detValor1Parameter, detValor2Parameter, detValor3Parameter, detFecha1Parameter, detFecha2Parameter, detFecha3Parameter, detDato1Parameter, detDato2Parameter, detDato3Parameter);
        }
    
        public virtual ObjectResult<sp_proc_ImpSolImportDesp_Result> sp_proc_ImpSolImportDesp(string archivo, string usuario, ObjectParameter generacion)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_proc_ImpSolImportDesp_Result>("sp_proc_ImpSolImportDesp", archivoParameter, usuarioParameter, generacion);
        }
    
        public virtual ObjectResult<sp_in_API_SolDespDetJson_Result> sp_in_API_SolDespDetJson(Nullable<int> solDespId, string codigoArticulo, string unidadVenta, string numeroSerie, Nullable<System.DateTime> fechaVectoLote, Nullable<decimal> cantidad, Nullable<int> estado, Nullable<decimal> costoUnitario, Nullable<decimal> kilosTotales, Nullable<decimal> porcQa, Nullable<int> maquila, string pallet, Nullable<int> itemReferencia, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, Nullable<System.DateTime> fecha3, string dato1, string dato2, string dato3, Nullable<decimal> valor1, Nullable<decimal> valor2, Nullable<decimal> valor3, Nullable<int> sucursal)
        {
            var solDespIdParameter = solDespId.HasValue ?
                new ObjectParameter("SolDespId", solDespId) :
                new ObjectParameter("SolDespId", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var unidadVentaParameter = unidadVenta != null ?
                new ObjectParameter("UnidadVenta", unidadVenta) :
                new ObjectParameter("UnidadVenta", typeof(string));
    
            var numeroSerieParameter = numeroSerie != null ?
                new ObjectParameter("NumeroSerie", numeroSerie) :
                new ObjectParameter("NumeroSerie", typeof(string));
    
            var fechaVectoLoteParameter = fechaVectoLote.HasValue ?
                new ObjectParameter("FechaVectoLote", fechaVectoLote) :
                new ObjectParameter("FechaVectoLote", typeof(System.DateTime));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var costoUnitarioParameter = costoUnitario.HasValue ?
                new ObjectParameter("CostoUnitario", costoUnitario) :
                new ObjectParameter("CostoUnitario", typeof(decimal));
    
            var kilosTotalesParameter = kilosTotales.HasValue ?
                new ObjectParameter("KilosTotales", kilosTotales) :
                new ObjectParameter("KilosTotales", typeof(decimal));
    
            var porcQaParameter = porcQa.HasValue ?
                new ObjectParameter("PorcQa", porcQa) :
                new ObjectParameter("PorcQa", typeof(decimal));
    
            var maquilaParameter = maquila.HasValue ?
                new ObjectParameter("Maquila", maquila) :
                new ObjectParameter("Maquila", typeof(int));
    
            var palletParameter = pallet != null ?
                new ObjectParameter("Pallet", pallet) :
                new ObjectParameter("Pallet", typeof(string));
    
            var itemReferenciaParameter = itemReferencia.HasValue ?
                new ObjectParameter("ItemReferencia", itemReferencia) :
                new ObjectParameter("ItemReferencia", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("Fecha1", fecha1) :
                new ObjectParameter("Fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("Fecha2", fecha2) :
                new ObjectParameter("Fecha2", typeof(System.DateTime));
    
            var fecha3Parameter = fecha3.HasValue ?
                new ObjectParameter("Fecha3", fecha3) :
                new ObjectParameter("Fecha3", typeof(System.DateTime));
    
            var dato1Parameter = dato1 != null ?
                new ObjectParameter("Dato1", dato1) :
                new ObjectParameter("Dato1", typeof(string));
    
            var dato2Parameter = dato2 != null ?
                new ObjectParameter("Dato2", dato2) :
                new ObjectParameter("Dato2", typeof(string));
    
            var dato3Parameter = dato3 != null ?
                new ObjectParameter("Dato3", dato3) :
                new ObjectParameter("Dato3", typeof(string));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("Valor1", valor1) :
                new ObjectParameter("Valor1", typeof(decimal));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("Valor2", valor2) :
                new ObjectParameter("Valor2", typeof(decimal));
    
            var valor3Parameter = valor3.HasValue ?
                new ObjectParameter("Valor3", valor3) :
                new ObjectParameter("Valor3", typeof(decimal));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_SolDespDetJson_Result>("sp_in_API_SolDespDetJson", solDespIdParameter, codigoArticuloParameter, unidadVentaParameter, numeroSerieParameter, fechaVectoLoteParameter, cantidadParameter, estadoParameter, costoUnitarioParameter, kilosTotalesParameter, porcQaParameter, maquilaParameter, palletParameter, itemReferenciaParameter, fecha1Parameter, fecha2Parameter, fecha3Parameter, dato1Parameter, dato2Parameter, dato3Parameter, valor1Parameter, valor2Parameter, valor3Parameter, sucursalParameter);
        }
    
        public virtual ObjectResult<sp_in_API_SolRecepcionDetJson_Result> sp_in_API_SolRecepcionDetJson(Nullable<decimal> solRecepId, string codigoArticulo, string unidadCompra, Nullable<decimal> cantidad, Nullable<int> itemReferencia, Nullable<decimal> costoUnitario, Nullable<decimal> kilosTotales, string nroSerieRecep, Nullable<System.DateTime> fechaVectoRecep, Nullable<int> estado, Nullable<decimal> porcQA, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, Nullable<System.DateTime> fecha3, string dato1, string dato2, string dato3, Nullable<decimal> valor1, Nullable<decimal> valor2, Nullable<decimal> valor3, Nullable<int> sucursal, string crossdocking)
        {
            var solRecepIdParameter = solRecepId.HasValue ?
                new ObjectParameter("SolRecepId", solRecepId) :
                new ObjectParameter("SolRecepId", typeof(decimal));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var unidadCompraParameter = unidadCompra != null ?
                new ObjectParameter("UnidadCompra", unidadCompra) :
                new ObjectParameter("UnidadCompra", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var itemReferenciaParameter = itemReferencia.HasValue ?
                new ObjectParameter("ItemReferencia", itemReferencia) :
                new ObjectParameter("ItemReferencia", typeof(int));
    
            var costoUnitarioParameter = costoUnitario.HasValue ?
                new ObjectParameter("CostoUnitario", costoUnitario) :
                new ObjectParameter("CostoUnitario", typeof(decimal));
    
            var kilosTotalesParameter = kilosTotales.HasValue ?
                new ObjectParameter("KilosTotales", kilosTotales) :
                new ObjectParameter("KilosTotales", typeof(decimal));
    
            var nroSerieRecepParameter = nroSerieRecep != null ?
                new ObjectParameter("NroSerieRecep", nroSerieRecep) :
                new ObjectParameter("NroSerieRecep", typeof(string));
    
            var fechaVectoRecepParameter = fechaVectoRecep.HasValue ?
                new ObjectParameter("FechaVectoRecep", fechaVectoRecep) :
                new ObjectParameter("FechaVectoRecep", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var porcQAParameter = porcQA.HasValue ?
                new ObjectParameter("PorcQA", porcQA) :
                new ObjectParameter("PorcQA", typeof(decimal));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("Fecha1", fecha1) :
                new ObjectParameter("Fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("Fecha2", fecha2) :
                new ObjectParameter("Fecha2", typeof(System.DateTime));
    
            var fecha3Parameter = fecha3.HasValue ?
                new ObjectParameter("Fecha3", fecha3) :
                new ObjectParameter("Fecha3", typeof(System.DateTime));
    
            var dato1Parameter = dato1 != null ?
                new ObjectParameter("Dato1", dato1) :
                new ObjectParameter("Dato1", typeof(string));
    
            var dato2Parameter = dato2 != null ?
                new ObjectParameter("Dato2", dato2) :
                new ObjectParameter("Dato2", typeof(string));
    
            var dato3Parameter = dato3 != null ?
                new ObjectParameter("Dato3", dato3) :
                new ObjectParameter("Dato3", typeof(string));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("Valor1", valor1) :
                new ObjectParameter("Valor1", typeof(decimal));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("Valor2", valor2) :
                new ObjectParameter("Valor2", typeof(decimal));
    
            var valor3Parameter = valor3.HasValue ?
                new ObjectParameter("Valor3", valor3) :
                new ObjectParameter("Valor3", typeof(decimal));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(int));
    
            var crossdockingParameter = crossdocking != null ?
                new ObjectParameter("Crossdocking", crossdocking) :
                new ObjectParameter("Crossdocking", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_SolRecepcionDetJson_Result>("sp_in_API_SolRecepcionDetJson", solRecepIdParameter, codigoArticuloParameter, unidadCompraParameter, cantidadParameter, itemReferenciaParameter, costoUnitarioParameter, kilosTotalesParameter, nroSerieRecepParameter, fechaVectoRecepParameter, estadoParameter, porcQAParameter, fecha1Parameter, fecha2Parameter, fecha3Parameter, dato1Parameter, dato2Parameter, dato3Parameter, valor1Parameter, valor2Parameter, valor3Parameter, sucursalParameter, crossdockingParameter);
        }
    
        public virtual ObjectResult<sp_in_API_TMPSolDespachoJson_Result> sp_in_API_TMPSolDespachoJson(string archivo, string usuarioDig, string proceso, Nullable<int> empId, Nullable<int> tipoSolicitud, Nullable<int> codigoBodega, string tipoReferencia, string numeroReferencia, Nullable<System.DateTime> fechaReferencia, Nullable<System.DateTime> fechaProceso, Nullable<int> tipoDocumento, string numeroDocto, Nullable<System.DateTime> fechaDocto, string glosa, string cliente, string razonSocial, string telefono, string email, string direccion, string contacto, Nullable<int> rutaDespacho, string region, string comuna, string ciudad, string vendedor, string comprador, string dato1, string dato2, string dato3, Nullable<decimal> valor1, Nullable<decimal> valor2, Nullable<decimal> valor3, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, Nullable<System.DateTime> fecha3, Nullable<int> sucursal, string codigoArticulo, string unidadVenta, string numeroSerie, Nullable<System.DateTime> fechaVectoLote, Nullable<decimal> cantidad, Nullable<int> estado, Nullable<decimal> costoUnitario, Nullable<decimal> kilosTotales, Nullable<decimal> porcQa, Nullable<int> maquila, string pallet, Nullable<int> itemReferencia, Nullable<System.DateTime> fechaDet1, Nullable<System.DateTime> fechaDet2, Nullable<System.DateTime> fechaDet3, string datoDet1, string datoDet2, string datoDet3, Nullable<decimal> valorDet1, Nullable<decimal> valorDet2, Nullable<decimal> valorDet3, Nullable<int> sucursalDet, Nullable<int> limpiar)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var usuarioDigParameter = usuarioDig != null ?
                new ObjectParameter("UsuarioDig", usuarioDig) :
                new ObjectParameter("UsuarioDig", typeof(string));
    
            var procesoParameter = proceso != null ?
                new ObjectParameter("Proceso", proceso) :
                new ObjectParameter("Proceso", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var tipoSolicitudParameter = tipoSolicitud.HasValue ?
                new ObjectParameter("TipoSolicitud", tipoSolicitud) :
                new ObjectParameter("TipoSolicitud", typeof(int));
    
            var codigoBodegaParameter = codigoBodega.HasValue ?
                new ObjectParameter("CodigoBodega", codigoBodega) :
                new ObjectParameter("CodigoBodega", typeof(int));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(string));
    
            var fechaReferenciaParameter = fechaReferencia.HasValue ?
                new ObjectParameter("FechaReferencia", fechaReferencia) :
                new ObjectParameter("FechaReferencia", typeof(System.DateTime));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("FechaProceso", fechaProceso) :
                new ObjectParameter("FechaProceso", typeof(System.DateTime));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(int));
    
            var numeroDoctoParameter = numeroDocto != null ?
                new ObjectParameter("NumeroDocto", numeroDocto) :
                new ObjectParameter("NumeroDocto", typeof(string));
    
            var fechaDoctoParameter = fechaDocto.HasValue ?
                new ObjectParameter("FechaDocto", fechaDocto) :
                new ObjectParameter("FechaDocto", typeof(System.DateTime));
    
            var glosaParameter = glosa != null ?
                new ObjectParameter("Glosa", glosa) :
                new ObjectParameter("Glosa", typeof(string));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("Contacto", contacto) :
                new ObjectParameter("Contacto", typeof(string));
    
            var rutaDespachoParameter = rutaDespacho.HasValue ?
                new ObjectParameter("RutaDespacho", rutaDespacho) :
                new ObjectParameter("RutaDespacho", typeof(int));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var comunaParameter = comuna != null ?
                new ObjectParameter("Comuna", comuna) :
                new ObjectParameter("Comuna", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var vendedorParameter = vendedor != null ?
                new ObjectParameter("Vendedor", vendedor) :
                new ObjectParameter("Vendedor", typeof(string));
    
            var compradorParameter = comprador != null ?
                new ObjectParameter("Comprador", comprador) :
                new ObjectParameter("Comprador", typeof(string));
    
            var dato1Parameter = dato1 != null ?
                new ObjectParameter("Dato1", dato1) :
                new ObjectParameter("Dato1", typeof(string));
    
            var dato2Parameter = dato2 != null ?
                new ObjectParameter("Dato2", dato2) :
                new ObjectParameter("Dato2", typeof(string));
    
            var dato3Parameter = dato3 != null ?
                new ObjectParameter("Dato3", dato3) :
                new ObjectParameter("Dato3", typeof(string));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("Valor1", valor1) :
                new ObjectParameter("Valor1", typeof(decimal));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("Valor2", valor2) :
                new ObjectParameter("Valor2", typeof(decimal));
    
            var valor3Parameter = valor3.HasValue ?
                new ObjectParameter("Valor3", valor3) :
                new ObjectParameter("Valor3", typeof(decimal));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("Fecha1", fecha1) :
                new ObjectParameter("Fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("Fecha2", fecha2) :
                new ObjectParameter("Fecha2", typeof(System.DateTime));
    
            var fecha3Parameter = fecha3.HasValue ?
                new ObjectParameter("Fecha3", fecha3) :
                new ObjectParameter("Fecha3", typeof(System.DateTime));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var unidadVentaParameter = unidadVenta != null ?
                new ObjectParameter("UnidadVenta", unidadVenta) :
                new ObjectParameter("UnidadVenta", typeof(string));
    
            var numeroSerieParameter = numeroSerie != null ?
                new ObjectParameter("NumeroSerie", numeroSerie) :
                new ObjectParameter("NumeroSerie", typeof(string));
    
            var fechaVectoLoteParameter = fechaVectoLote.HasValue ?
                new ObjectParameter("FechaVectoLote", fechaVectoLote) :
                new ObjectParameter("FechaVectoLote", typeof(System.DateTime));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var costoUnitarioParameter = costoUnitario.HasValue ?
                new ObjectParameter("CostoUnitario", costoUnitario) :
                new ObjectParameter("CostoUnitario", typeof(decimal));
    
            var kilosTotalesParameter = kilosTotales.HasValue ?
                new ObjectParameter("KilosTotales", kilosTotales) :
                new ObjectParameter("KilosTotales", typeof(decimal));
    
            var porcQaParameter = porcQa.HasValue ?
                new ObjectParameter("PorcQa", porcQa) :
                new ObjectParameter("PorcQa", typeof(decimal));
    
            var maquilaParameter = maquila.HasValue ?
                new ObjectParameter("Maquila", maquila) :
                new ObjectParameter("Maquila", typeof(int));
    
            var palletParameter = pallet != null ?
                new ObjectParameter("Pallet", pallet) :
                new ObjectParameter("Pallet", typeof(string));
    
            var itemReferenciaParameter = itemReferencia.HasValue ?
                new ObjectParameter("ItemReferencia", itemReferencia) :
                new ObjectParameter("ItemReferencia", typeof(int));
    
            var fechaDet1Parameter = fechaDet1.HasValue ?
                new ObjectParameter("FechaDet1", fechaDet1) :
                new ObjectParameter("FechaDet1", typeof(System.DateTime));
    
            var fechaDet2Parameter = fechaDet2.HasValue ?
                new ObjectParameter("FechaDet2", fechaDet2) :
                new ObjectParameter("FechaDet2", typeof(System.DateTime));
    
            var fechaDet3Parameter = fechaDet3.HasValue ?
                new ObjectParameter("FechaDet3", fechaDet3) :
                new ObjectParameter("FechaDet3", typeof(System.DateTime));
    
            var datoDet1Parameter = datoDet1 != null ?
                new ObjectParameter("DatoDet1", datoDet1) :
                new ObjectParameter("DatoDet1", typeof(string));
    
            var datoDet2Parameter = datoDet2 != null ?
                new ObjectParameter("DatoDet2", datoDet2) :
                new ObjectParameter("DatoDet2", typeof(string));
    
            var datoDet3Parameter = datoDet3 != null ?
                new ObjectParameter("DatoDet3", datoDet3) :
                new ObjectParameter("DatoDet3", typeof(string));
    
            var valorDet1Parameter = valorDet1.HasValue ?
                new ObjectParameter("ValorDet1", valorDet1) :
                new ObjectParameter("ValorDet1", typeof(decimal));
    
            var valorDet2Parameter = valorDet2.HasValue ?
                new ObjectParameter("ValorDet2", valorDet2) :
                new ObjectParameter("ValorDet2", typeof(decimal));
    
            var valorDet3Parameter = valorDet3.HasValue ?
                new ObjectParameter("ValorDet3", valorDet3) :
                new ObjectParameter("ValorDet3", typeof(decimal));
    
            var sucursalDetParameter = sucursalDet.HasValue ?
                new ObjectParameter("SucursalDet", sucursalDet) :
                new ObjectParameter("SucursalDet", typeof(int));
    
            var limpiarParameter = limpiar.HasValue ?
                new ObjectParameter("Limpiar", limpiar) :
                new ObjectParameter("Limpiar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_TMPSolDespachoJson_Result>("sp_in_API_TMPSolDespachoJson", archivoParameter, usuarioDigParameter, procesoParameter, empIdParameter, tipoSolicitudParameter, codigoBodegaParameter, tipoReferenciaParameter, numeroReferenciaParameter, fechaReferenciaParameter, fechaProcesoParameter, tipoDocumentoParameter, numeroDoctoParameter, fechaDoctoParameter, glosaParameter, clienteParameter, razonSocialParameter, telefonoParameter, emailParameter, direccionParameter, contactoParameter, rutaDespachoParameter, regionParameter, comunaParameter, ciudadParameter, vendedorParameter, compradorParameter, dato1Parameter, dato2Parameter, dato3Parameter, valor1Parameter, valor2Parameter, valor3Parameter, fecha1Parameter, fecha2Parameter, fecha3Parameter, sucursalParameter, codigoArticuloParameter, unidadVentaParameter, numeroSerieParameter, fechaVectoLoteParameter, cantidadParameter, estadoParameter, costoUnitarioParameter, kilosTotalesParameter, porcQaParameter, maquilaParameter, palletParameter, itemReferenciaParameter, fechaDet1Parameter, fechaDet2Parameter, fechaDet3Parameter, datoDet1Parameter, datoDet2Parameter, datoDet3Parameter, valorDet1Parameter, valorDet2Parameter, valorDet3Parameter, sucursalDetParameter, limpiarParameter);
        }
    
        public virtual ObjectResult<sp_in_API_TMPSolRecepcionJson_Result> sp_in_API_TMPSolRecepcionJson(string archivo, Nullable<int> empId, string usuarioDig, Nullable<System.DateTime> fechaProceso, Nullable<int> tipoSolicitud, Nullable<int> codigoBodega, string comprador, string rutProveedor, string razonSocial, string tipoReferencia, string numeroReferencia, Nullable<System.DateTime> fechaReferencia, string glosa, string dato1, string dato2, string dato3, Nullable<decimal> valor1, Nullable<decimal> valor2, Nullable<decimal> valor3, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, Nullable<System.DateTime> fecha3, string codigoArticulo, string unidadCompra, Nullable<decimal> cantidad, Nullable<int> itemReferencia, Nullable<decimal> costoUnitario, Nullable<decimal> kilosTotales, string nroSerieRecep, Nullable<System.DateTime> fechaVectoRecep, Nullable<int> estado, Nullable<decimal> porcQA, string datoDet1, string datoDet2, string datoDet3, Nullable<decimal> valorDet1, Nullable<decimal> valorDet2, Nullable<decimal> valorDet3, Nullable<System.DateTime> fechaDet1, Nullable<System.DateTime> fechaDet2, Nullable<System.DateTime> fechaDet3, Nullable<int> sucursal, string crossdocking)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var usuarioDigParameter = usuarioDig != null ?
                new ObjectParameter("UsuarioDig", usuarioDig) :
                new ObjectParameter("UsuarioDig", typeof(string));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("FechaProceso", fechaProceso) :
                new ObjectParameter("FechaProceso", typeof(System.DateTime));
    
            var tipoSolicitudParameter = tipoSolicitud.HasValue ?
                new ObjectParameter("TipoSolicitud", tipoSolicitud) :
                new ObjectParameter("TipoSolicitud", typeof(int));
    
            var codigoBodegaParameter = codigoBodega.HasValue ?
                new ObjectParameter("CodigoBodega", codigoBodega) :
                new ObjectParameter("CodigoBodega", typeof(int));
    
            var compradorParameter = comprador != null ?
                new ObjectParameter("Comprador", comprador) :
                new ObjectParameter("Comprador", typeof(string));
    
            var rutProveedorParameter = rutProveedor != null ?
                new ObjectParameter("RutProveedor", rutProveedor) :
                new ObjectParameter("RutProveedor", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(string));
    
            var fechaReferenciaParameter = fechaReferencia.HasValue ?
                new ObjectParameter("FechaReferencia", fechaReferencia) :
                new ObjectParameter("FechaReferencia", typeof(System.DateTime));
    
            var glosaParameter = glosa != null ?
                new ObjectParameter("Glosa", glosa) :
                new ObjectParameter("Glosa", typeof(string));
    
            var dato1Parameter = dato1 != null ?
                new ObjectParameter("Dato1", dato1) :
                new ObjectParameter("Dato1", typeof(string));
    
            var dato2Parameter = dato2 != null ?
                new ObjectParameter("Dato2", dato2) :
                new ObjectParameter("Dato2", typeof(string));
    
            var dato3Parameter = dato3 != null ?
                new ObjectParameter("Dato3", dato3) :
                new ObjectParameter("Dato3", typeof(string));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("Valor1", valor1) :
                new ObjectParameter("Valor1", typeof(decimal));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("Valor2", valor2) :
                new ObjectParameter("Valor2", typeof(decimal));
    
            var valor3Parameter = valor3.HasValue ?
                new ObjectParameter("Valor3", valor3) :
                new ObjectParameter("Valor3", typeof(decimal));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("Fecha1", fecha1) :
                new ObjectParameter("Fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("Fecha2", fecha2) :
                new ObjectParameter("Fecha2", typeof(System.DateTime));
    
            var fecha3Parameter = fecha3.HasValue ?
                new ObjectParameter("Fecha3", fecha3) :
                new ObjectParameter("Fecha3", typeof(System.DateTime));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var unidadCompraParameter = unidadCompra != null ?
                new ObjectParameter("UnidadCompra", unidadCompra) :
                new ObjectParameter("UnidadCompra", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var itemReferenciaParameter = itemReferencia.HasValue ?
                new ObjectParameter("ItemReferencia", itemReferencia) :
                new ObjectParameter("ItemReferencia", typeof(int));
    
            var costoUnitarioParameter = costoUnitario.HasValue ?
                new ObjectParameter("CostoUnitario", costoUnitario) :
                new ObjectParameter("CostoUnitario", typeof(decimal));
    
            var kilosTotalesParameter = kilosTotales.HasValue ?
                new ObjectParameter("KilosTotales", kilosTotales) :
                new ObjectParameter("KilosTotales", typeof(decimal));
    
            var nroSerieRecepParameter = nroSerieRecep != null ?
                new ObjectParameter("NroSerieRecep", nroSerieRecep) :
                new ObjectParameter("NroSerieRecep", typeof(string));
    
            var fechaVectoRecepParameter = fechaVectoRecep.HasValue ?
                new ObjectParameter("FechaVectoRecep", fechaVectoRecep) :
                new ObjectParameter("FechaVectoRecep", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var porcQAParameter = porcQA.HasValue ?
                new ObjectParameter("PorcQA", porcQA) :
                new ObjectParameter("PorcQA", typeof(decimal));
    
            var datoDet1Parameter = datoDet1 != null ?
                new ObjectParameter("DatoDet1", datoDet1) :
                new ObjectParameter("DatoDet1", typeof(string));
    
            var datoDet2Parameter = datoDet2 != null ?
                new ObjectParameter("DatoDet2", datoDet2) :
                new ObjectParameter("DatoDet2", typeof(string));
    
            var datoDet3Parameter = datoDet3 != null ?
                new ObjectParameter("DatoDet3", datoDet3) :
                new ObjectParameter("DatoDet3", typeof(string));
    
            var valorDet1Parameter = valorDet1.HasValue ?
                new ObjectParameter("ValorDet1", valorDet1) :
                new ObjectParameter("ValorDet1", typeof(decimal));
    
            var valorDet2Parameter = valorDet2.HasValue ?
                new ObjectParameter("ValorDet2", valorDet2) :
                new ObjectParameter("ValorDet2", typeof(decimal));
    
            var valorDet3Parameter = valorDet3.HasValue ?
                new ObjectParameter("ValorDet3", valorDet3) :
                new ObjectParameter("ValorDet3", typeof(decimal));
    
            var fechaDet1Parameter = fechaDet1.HasValue ?
                new ObjectParameter("FechaDet1", fechaDet1) :
                new ObjectParameter("FechaDet1", typeof(System.DateTime));
    
            var fechaDet2Parameter = fechaDet2.HasValue ?
                new ObjectParameter("FechaDet2", fechaDet2) :
                new ObjectParameter("FechaDet2", typeof(System.DateTime));
    
            var fechaDet3Parameter = fechaDet3.HasValue ?
                new ObjectParameter("FechaDet3", fechaDet3) :
                new ObjectParameter("FechaDet3", typeof(System.DateTime));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(int));
    
            var crossdockingParameter = crossdocking != null ?
                new ObjectParameter("Crossdocking", crossdocking) :
                new ObjectParameter("Crossdocking", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_TMPSolRecepcionJson_Result>("sp_in_API_TMPSolRecepcionJson", archivoParameter, empIdParameter, usuarioDigParameter, fechaProcesoParameter, tipoSolicitudParameter, codigoBodegaParameter, compradorParameter, rutProveedorParameter, razonSocialParameter, tipoReferenciaParameter, numeroReferenciaParameter, fechaReferenciaParameter, glosaParameter, dato1Parameter, dato2Parameter, dato3Parameter, valor1Parameter, valor2Parameter, valor3Parameter, fecha1Parameter, fecha2Parameter, fecha3Parameter, codigoArticuloParameter, unidadCompraParameter, cantidadParameter, itemReferenciaParameter, costoUnitarioParameter, kilosTotalesParameter, nroSerieRecepParameter, fechaVectoRecepParameter, estadoParameter, porcQAParameter, datoDet1Parameter, datoDet2Parameter, datoDet3Parameter, valorDet1Parameter, valorDet2Parameter, valorDet3Parameter, fechaDet1Parameter, fechaDet2Parameter, fechaDet3Parameter, sucursalParameter, crossdockingParameter);
        }
    
        public virtual int sp_proc_API_TMPSolDespachoValidaJson(Nullable<int> empid, string userName, Nullable<decimal> solDespId, string listaCodigoArticulo, Nullable<int> cantidadItems)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var solDespIdParameter = solDespId.HasValue ?
                new ObjectParameter("SolDespId", solDespId) :
                new ObjectParameter("SolDespId", typeof(decimal));
    
            var listaCodigoArticuloParameter = listaCodigoArticulo != null ?
                new ObjectParameter("ListaCodigoArticulo", listaCodigoArticulo) :
                new ObjectParameter("ListaCodigoArticulo", typeof(string));
    
            var cantidadItemsParameter = cantidadItems.HasValue ?
                new ObjectParameter("CantidadItems", cantidadItems) :
                new ObjectParameter("CantidadItems", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_proc_API_TMPSolDespachoValidaJson", empidParameter, userNameParameter, solDespIdParameter, listaCodigoArticuloParameter, cantidadItemsParameter);
        }
    
        public virtual ObjectResult<sp_proc_API_TMPSolDespachoJson_Result> sp_proc_API_TMPSolDespachoJson(string archivo, string usuarioDig)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var usuarioDigParameter = usuarioDig != null ?
                new ObjectParameter("UsuarioDig", usuarioDig) :
                new ObjectParameter("UsuarioDig", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_proc_API_TMPSolDespachoJson_Result>("sp_proc_API_TMPSolDespachoJson", archivoParameter, usuarioDigParameter);
        }
    
        public virtual ObjectResult<sp_proc_API_Integraciones_Result> sp_proc_API_Integraciones(string archivo, string usuarioDig)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var usuarioDigParameter = usuarioDig != null ?
                new ObjectParameter("UsuarioDig", usuarioDig) :
                new ObjectParameter("UsuarioDig", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_proc_API_Integraciones_Result>("sp_proc_API_Integraciones", archivoParameter, usuarioDigParameter);
        }
    
        public virtual ObjectResult<sp_in_API_Integraciones_Result> sp_in_API_Integraciones(string archivo, string userName, Nullable<System.DateTime> fechaProceso, Nullable<int> linea, string texto1, string texto2, string texto3, string texto4, string texto5, string texto6, string texto7, string texto8, string texto9, string texto10, string texto11, string texto12, string texto13, string texto14, string texto15, string texto16, string texto17, string texto18, string texto19, string texto20, string texto21, string texto22, string texto23, string texto24, string texto25, string texto26, string texto27, string texto28, string texto29, string texto30, string texto31, string texto32, string texto33, string texto34, string texto35, string texto36, string texto37, string texto38, string texto39, string texto40, string texto41, string texto42, string texto43, string texto44, string texto45, string texto46, string texto47, string texto48, string texto49, string texto50, string texto51, string texto52, string texto53, string texto54, string texto55, string texto56, string texto57, string texto58, string texto59, string texto60, string texto61, string texto62, string texto63, string texto64, string texto65, string texto66, string texto67, string texto68, string texto69, string texto70, string texto71, string texto72, string texto73, string texto74, string texto75, string texto76, string texto77, string texto78, string texto79, string texto80, string texto81, string texto82, string texto83, string texto84, string texto85, string texto86, string texto87, string texto88, string texto89, string texto90, string texto91, string texto92, string texto93, string texto94, string texto95, string texto96, string texto97, string texto98, string texto99, string texto100)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("FechaProceso", fechaProceso) :
                new ObjectParameter("FechaProceso", typeof(System.DateTime));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var texto1Parameter = texto1 != null ?
                new ObjectParameter("Texto1", texto1) :
                new ObjectParameter("Texto1", typeof(string));
    
            var texto2Parameter = texto2 != null ?
                new ObjectParameter("Texto2", texto2) :
                new ObjectParameter("Texto2", typeof(string));
    
            var texto3Parameter = texto3 != null ?
                new ObjectParameter("Texto3", texto3) :
                new ObjectParameter("Texto3", typeof(string));
    
            var texto4Parameter = texto4 != null ?
                new ObjectParameter("Texto4", texto4) :
                new ObjectParameter("Texto4", typeof(string));
    
            var texto5Parameter = texto5 != null ?
                new ObjectParameter("Texto5", texto5) :
                new ObjectParameter("Texto5", typeof(string));
    
            var texto6Parameter = texto6 != null ?
                new ObjectParameter("Texto6", texto6) :
                new ObjectParameter("Texto6", typeof(string));
    
            var texto7Parameter = texto7 != null ?
                new ObjectParameter("Texto7", texto7) :
                new ObjectParameter("Texto7", typeof(string));
    
            var texto8Parameter = texto8 != null ?
                new ObjectParameter("Texto8", texto8) :
                new ObjectParameter("Texto8", typeof(string));
    
            var texto9Parameter = texto9 != null ?
                new ObjectParameter("Texto9", texto9) :
                new ObjectParameter("Texto9", typeof(string));
    
            var texto10Parameter = texto10 != null ?
                new ObjectParameter("Texto10", texto10) :
                new ObjectParameter("Texto10", typeof(string));
    
            var texto11Parameter = texto11 != null ?
                new ObjectParameter("Texto11", texto11) :
                new ObjectParameter("Texto11", typeof(string));
    
            var texto12Parameter = texto12 != null ?
                new ObjectParameter("Texto12", texto12) :
                new ObjectParameter("Texto12", typeof(string));
    
            var texto13Parameter = texto13 != null ?
                new ObjectParameter("Texto13", texto13) :
                new ObjectParameter("Texto13", typeof(string));
    
            var texto14Parameter = texto14 != null ?
                new ObjectParameter("Texto14", texto14) :
                new ObjectParameter("Texto14", typeof(string));
    
            var texto15Parameter = texto15 != null ?
                new ObjectParameter("Texto15", texto15) :
                new ObjectParameter("Texto15", typeof(string));
    
            var texto16Parameter = texto16 != null ?
                new ObjectParameter("Texto16", texto16) :
                new ObjectParameter("Texto16", typeof(string));
    
            var texto17Parameter = texto17 != null ?
                new ObjectParameter("Texto17", texto17) :
                new ObjectParameter("Texto17", typeof(string));
    
            var texto18Parameter = texto18 != null ?
                new ObjectParameter("Texto18", texto18) :
                new ObjectParameter("Texto18", typeof(string));
    
            var texto19Parameter = texto19 != null ?
                new ObjectParameter("Texto19", texto19) :
                new ObjectParameter("Texto19", typeof(string));
    
            var texto20Parameter = texto20 != null ?
                new ObjectParameter("Texto20", texto20) :
                new ObjectParameter("Texto20", typeof(string));
    
            var texto21Parameter = texto21 != null ?
                new ObjectParameter("Texto21", texto21) :
                new ObjectParameter("Texto21", typeof(string));
    
            var texto22Parameter = texto22 != null ?
                new ObjectParameter("Texto22", texto22) :
                new ObjectParameter("Texto22", typeof(string));
    
            var texto23Parameter = texto23 != null ?
                new ObjectParameter("Texto23", texto23) :
                new ObjectParameter("Texto23", typeof(string));
    
            var texto24Parameter = texto24 != null ?
                new ObjectParameter("Texto24", texto24) :
                new ObjectParameter("Texto24", typeof(string));
    
            var texto25Parameter = texto25 != null ?
                new ObjectParameter("Texto25", texto25) :
                new ObjectParameter("Texto25", typeof(string));
    
            var texto26Parameter = texto26 != null ?
                new ObjectParameter("Texto26", texto26) :
                new ObjectParameter("Texto26", typeof(string));
    
            var texto27Parameter = texto27 != null ?
                new ObjectParameter("Texto27", texto27) :
                new ObjectParameter("Texto27", typeof(string));
    
            var texto28Parameter = texto28 != null ?
                new ObjectParameter("Texto28", texto28) :
                new ObjectParameter("Texto28", typeof(string));
    
            var texto29Parameter = texto29 != null ?
                new ObjectParameter("Texto29", texto29) :
                new ObjectParameter("Texto29", typeof(string));
    
            var texto30Parameter = texto30 != null ?
                new ObjectParameter("Texto30", texto30) :
                new ObjectParameter("Texto30", typeof(string));
    
            var texto31Parameter = texto31 != null ?
                new ObjectParameter("Texto31", texto31) :
                new ObjectParameter("Texto31", typeof(string));
    
            var texto32Parameter = texto32 != null ?
                new ObjectParameter("Texto32", texto32) :
                new ObjectParameter("Texto32", typeof(string));
    
            var texto33Parameter = texto33 != null ?
                new ObjectParameter("Texto33", texto33) :
                new ObjectParameter("Texto33", typeof(string));
    
            var texto34Parameter = texto34 != null ?
                new ObjectParameter("Texto34", texto34) :
                new ObjectParameter("Texto34", typeof(string));
    
            var texto35Parameter = texto35 != null ?
                new ObjectParameter("Texto35", texto35) :
                new ObjectParameter("Texto35", typeof(string));
    
            var texto36Parameter = texto36 != null ?
                new ObjectParameter("Texto36", texto36) :
                new ObjectParameter("Texto36", typeof(string));
    
            var texto37Parameter = texto37 != null ?
                new ObjectParameter("Texto37", texto37) :
                new ObjectParameter("Texto37", typeof(string));
    
            var texto38Parameter = texto38 != null ?
                new ObjectParameter("Texto38", texto38) :
                new ObjectParameter("Texto38", typeof(string));
    
            var texto39Parameter = texto39 != null ?
                new ObjectParameter("Texto39", texto39) :
                new ObjectParameter("Texto39", typeof(string));
    
            var texto40Parameter = texto40 != null ?
                new ObjectParameter("Texto40", texto40) :
                new ObjectParameter("Texto40", typeof(string));
    
            var texto41Parameter = texto41 != null ?
                new ObjectParameter("Texto41", texto41) :
                new ObjectParameter("Texto41", typeof(string));
    
            var texto42Parameter = texto42 != null ?
                new ObjectParameter("Texto42", texto42) :
                new ObjectParameter("Texto42", typeof(string));
    
            var texto43Parameter = texto43 != null ?
                new ObjectParameter("Texto43", texto43) :
                new ObjectParameter("Texto43", typeof(string));
    
            var texto44Parameter = texto44 != null ?
                new ObjectParameter("Texto44", texto44) :
                new ObjectParameter("Texto44", typeof(string));
    
            var texto45Parameter = texto45 != null ?
                new ObjectParameter("Texto45", texto45) :
                new ObjectParameter("Texto45", typeof(string));
    
            var texto46Parameter = texto46 != null ?
                new ObjectParameter("Texto46", texto46) :
                new ObjectParameter("Texto46", typeof(string));
    
            var texto47Parameter = texto47 != null ?
                new ObjectParameter("Texto47", texto47) :
                new ObjectParameter("Texto47", typeof(string));
    
            var texto48Parameter = texto48 != null ?
                new ObjectParameter("Texto48", texto48) :
                new ObjectParameter("Texto48", typeof(string));
    
            var texto49Parameter = texto49 != null ?
                new ObjectParameter("Texto49", texto49) :
                new ObjectParameter("Texto49", typeof(string));
    
            var texto50Parameter = texto50 != null ?
                new ObjectParameter("Texto50", texto50) :
                new ObjectParameter("Texto50", typeof(string));
    
            var texto51Parameter = texto51 != null ?
                new ObjectParameter("Texto51", texto51) :
                new ObjectParameter("Texto51", typeof(string));
    
            var texto52Parameter = texto52 != null ?
                new ObjectParameter("Texto52", texto52) :
                new ObjectParameter("Texto52", typeof(string));
    
            var texto53Parameter = texto53 != null ?
                new ObjectParameter("Texto53", texto53) :
                new ObjectParameter("Texto53", typeof(string));
    
            var texto54Parameter = texto54 != null ?
                new ObjectParameter("Texto54", texto54) :
                new ObjectParameter("Texto54", typeof(string));
    
            var texto55Parameter = texto55 != null ?
                new ObjectParameter("Texto55", texto55) :
                new ObjectParameter("Texto55", typeof(string));
    
            var texto56Parameter = texto56 != null ?
                new ObjectParameter("Texto56", texto56) :
                new ObjectParameter("Texto56", typeof(string));
    
            var texto57Parameter = texto57 != null ?
                new ObjectParameter("Texto57", texto57) :
                new ObjectParameter("Texto57", typeof(string));
    
            var texto58Parameter = texto58 != null ?
                new ObjectParameter("Texto58", texto58) :
                new ObjectParameter("Texto58", typeof(string));
    
            var texto59Parameter = texto59 != null ?
                new ObjectParameter("Texto59", texto59) :
                new ObjectParameter("Texto59", typeof(string));
    
            var texto60Parameter = texto60 != null ?
                new ObjectParameter("Texto60", texto60) :
                new ObjectParameter("Texto60", typeof(string));
    
            var texto61Parameter = texto61 != null ?
                new ObjectParameter("Texto61", texto61) :
                new ObjectParameter("Texto61", typeof(string));
    
            var texto62Parameter = texto62 != null ?
                new ObjectParameter("Texto62", texto62) :
                new ObjectParameter("Texto62", typeof(string));
    
            var texto63Parameter = texto63 != null ?
                new ObjectParameter("Texto63", texto63) :
                new ObjectParameter("Texto63", typeof(string));
    
            var texto64Parameter = texto64 != null ?
                new ObjectParameter("Texto64", texto64) :
                new ObjectParameter("Texto64", typeof(string));
    
            var texto65Parameter = texto65 != null ?
                new ObjectParameter("Texto65", texto65) :
                new ObjectParameter("Texto65", typeof(string));
    
            var texto66Parameter = texto66 != null ?
                new ObjectParameter("Texto66", texto66) :
                new ObjectParameter("Texto66", typeof(string));
    
            var texto67Parameter = texto67 != null ?
                new ObjectParameter("Texto67", texto67) :
                new ObjectParameter("Texto67", typeof(string));
    
            var texto68Parameter = texto68 != null ?
                new ObjectParameter("Texto68", texto68) :
                new ObjectParameter("Texto68", typeof(string));
    
            var texto69Parameter = texto69 != null ?
                new ObjectParameter("Texto69", texto69) :
                new ObjectParameter("Texto69", typeof(string));
    
            var texto70Parameter = texto70 != null ?
                new ObjectParameter("Texto70", texto70) :
                new ObjectParameter("Texto70", typeof(string));
    
            var texto71Parameter = texto71 != null ?
                new ObjectParameter("Texto71", texto71) :
                new ObjectParameter("Texto71", typeof(string));
    
            var texto72Parameter = texto72 != null ?
                new ObjectParameter("Texto72", texto72) :
                new ObjectParameter("Texto72", typeof(string));
    
            var texto73Parameter = texto73 != null ?
                new ObjectParameter("Texto73", texto73) :
                new ObjectParameter("Texto73", typeof(string));
    
            var texto74Parameter = texto74 != null ?
                new ObjectParameter("Texto74", texto74) :
                new ObjectParameter("Texto74", typeof(string));
    
            var texto75Parameter = texto75 != null ?
                new ObjectParameter("Texto75", texto75) :
                new ObjectParameter("Texto75", typeof(string));
    
            var texto76Parameter = texto76 != null ?
                new ObjectParameter("Texto76", texto76) :
                new ObjectParameter("Texto76", typeof(string));
    
            var texto77Parameter = texto77 != null ?
                new ObjectParameter("Texto77", texto77) :
                new ObjectParameter("Texto77", typeof(string));
    
            var texto78Parameter = texto78 != null ?
                new ObjectParameter("Texto78", texto78) :
                new ObjectParameter("Texto78", typeof(string));
    
            var texto79Parameter = texto79 != null ?
                new ObjectParameter("Texto79", texto79) :
                new ObjectParameter("Texto79", typeof(string));
    
            var texto80Parameter = texto80 != null ?
                new ObjectParameter("Texto80", texto80) :
                new ObjectParameter("Texto80", typeof(string));
    
            var texto81Parameter = texto81 != null ?
                new ObjectParameter("Texto81", texto81) :
                new ObjectParameter("Texto81", typeof(string));
    
            var texto82Parameter = texto82 != null ?
                new ObjectParameter("Texto82", texto82) :
                new ObjectParameter("Texto82", typeof(string));
    
            var texto83Parameter = texto83 != null ?
                new ObjectParameter("Texto83", texto83) :
                new ObjectParameter("Texto83", typeof(string));
    
            var texto84Parameter = texto84 != null ?
                new ObjectParameter("Texto84", texto84) :
                new ObjectParameter("Texto84", typeof(string));
    
            var texto85Parameter = texto85 != null ?
                new ObjectParameter("Texto85", texto85) :
                new ObjectParameter("Texto85", typeof(string));
    
            var texto86Parameter = texto86 != null ?
                new ObjectParameter("Texto86", texto86) :
                new ObjectParameter("Texto86", typeof(string));
    
            var texto87Parameter = texto87 != null ?
                new ObjectParameter("Texto87", texto87) :
                new ObjectParameter("Texto87", typeof(string));
    
            var texto88Parameter = texto88 != null ?
                new ObjectParameter("Texto88", texto88) :
                new ObjectParameter("Texto88", typeof(string));
    
            var texto89Parameter = texto89 != null ?
                new ObjectParameter("Texto89", texto89) :
                new ObjectParameter("Texto89", typeof(string));
    
            var texto90Parameter = texto90 != null ?
                new ObjectParameter("Texto90", texto90) :
                new ObjectParameter("Texto90", typeof(string));
    
            var texto91Parameter = texto91 != null ?
                new ObjectParameter("Texto91", texto91) :
                new ObjectParameter("Texto91", typeof(string));
    
            var texto92Parameter = texto92 != null ?
                new ObjectParameter("Texto92", texto92) :
                new ObjectParameter("Texto92", typeof(string));
    
            var texto93Parameter = texto93 != null ?
                new ObjectParameter("Texto93", texto93) :
                new ObjectParameter("Texto93", typeof(string));
    
            var texto94Parameter = texto94 != null ?
                new ObjectParameter("Texto94", texto94) :
                new ObjectParameter("Texto94", typeof(string));
    
            var texto95Parameter = texto95 != null ?
                new ObjectParameter("Texto95", texto95) :
                new ObjectParameter("Texto95", typeof(string));
    
            var texto96Parameter = texto96 != null ?
                new ObjectParameter("Texto96", texto96) :
                new ObjectParameter("Texto96", typeof(string));
    
            var texto97Parameter = texto97 != null ?
                new ObjectParameter("Texto97", texto97) :
                new ObjectParameter("Texto97", typeof(string));
    
            var texto98Parameter = texto98 != null ?
                new ObjectParameter("Texto98", texto98) :
                new ObjectParameter("Texto98", typeof(string));
    
            var texto99Parameter = texto99 != null ?
                new ObjectParameter("Texto99", texto99) :
                new ObjectParameter("Texto99", typeof(string));
    
            var texto100Parameter = texto100 != null ?
                new ObjectParameter("Texto100", texto100) :
                new ObjectParameter("Texto100", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_Integraciones_Result>("sp_in_API_Integraciones", archivoParameter, userNameParameter, fechaProcesoParameter, lineaParameter, texto1Parameter, texto2Parameter, texto3Parameter, texto4Parameter, texto5Parameter, texto6Parameter, texto7Parameter, texto8Parameter, texto9Parameter, texto10Parameter, texto11Parameter, texto12Parameter, texto13Parameter, texto14Parameter, texto15Parameter, texto16Parameter, texto17Parameter, texto18Parameter, texto19Parameter, texto20Parameter, texto21Parameter, texto22Parameter, texto23Parameter, texto24Parameter, texto25Parameter, texto26Parameter, texto27Parameter, texto28Parameter, texto29Parameter, texto30Parameter, texto31Parameter, texto32Parameter, texto33Parameter, texto34Parameter, texto35Parameter, texto36Parameter, texto37Parameter, texto38Parameter, texto39Parameter, texto40Parameter, texto41Parameter, texto42Parameter, texto43Parameter, texto44Parameter, texto45Parameter, texto46Parameter, texto47Parameter, texto48Parameter, texto49Parameter, texto50Parameter, texto51Parameter, texto52Parameter, texto53Parameter, texto54Parameter, texto55Parameter, texto56Parameter, texto57Parameter, texto58Parameter, texto59Parameter, texto60Parameter, texto61Parameter, texto62Parameter, texto63Parameter, texto64Parameter, texto65Parameter, texto66Parameter, texto67Parameter, texto68Parameter, texto69Parameter, texto70Parameter, texto71Parameter, texto72Parameter, texto73Parameter, texto74Parameter, texto75Parameter, texto76Parameter, texto77Parameter, texto78Parameter, texto79Parameter, texto80Parameter, texto81Parameter, texto82Parameter, texto83Parameter, texto84Parameter, texto85Parameter, texto86Parameter, texto87Parameter, texto88Parameter, texto89Parameter, texto90Parameter, texto91Parameter, texto92Parameter, texto93Parameter, texto94Parameter, texto95Parameter, texto96Parameter, texto97Parameter, texto98Parameter, texto99Parameter, texto100Parameter);
        }
    
        public virtual ObjectResult<string> sp_in_API_Integraciones_Masivo(string archivo, string userName, Nullable<System.DateTime> fechaProceso, string datos)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("FechaProceso", fechaProceso) :
                new ObjectParameter("FechaProceso", typeof(System.DateTime));
    
            var datosParameter = datos != null ?
                new ObjectParameter("Datos", datos) :
                new ObjectParameter("Datos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_in_API_Integraciones_Masivo", archivoParameter, userNameParameter, fechaProcesoParameter, datosParameter);
        }
    
        public virtual ObjectResult<sp_proc_API_Integracion_Result> sp_proc_API_Integracion(Nullable<int> empId, string nombreArchivo)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var nombreArchivoParameter = nombreArchivo != null ?
                new ObjectParameter("NombreArchivo", nombreArchivo) :
                new ObjectParameter("NombreArchivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_proc_API_Integracion_Result>("sp_proc_API_Integracion", empIdParameter, nombreArchivoParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_EvolutivoMesCliente_Result> sp_sel_API_EvolutivoMesCliente(Nullable<int> empid, Nullable<int> mes, Nullable<int> ejercicio, Nullable<int> limit, Nullable<int> rowset)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var ejercicioParameter = ejercicio.HasValue ?
                new ObjectParameter("Ejercicio", ejercicio) :
                new ObjectParameter("Ejercicio", typeof(int));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var rowsetParameter = rowset.HasValue ?
                new ObjectParameter("Rowset", rowset) :
                new ObjectParameter("Rowset", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_EvolutivoMesCliente_Result>("sp_sel_API_EvolutivoMesCliente", empidParameter, mesParameter, ejercicioParameter, limitParameter, rowsetParameter);
        }
    
        public virtual ObjectResult<sp_sel_API_ConsultaBultoRoboris_Result> sp_sel_API_ConsultaBultoRoboris(string numeroBulto)
        {
            var numeroBultoParameter = numeroBulto != null ?
                new ObjectParameter("NumeroBulto", numeroBulto) :
                new ObjectParameter("NumeroBulto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sel_API_ConsultaBultoRoboris_Result>("sp_sel_API_ConsultaBultoRoboris", numeroBultoParameter);
        }
    
        public virtual ObjectResult<sp_in_API_SolDespJson_Result> sp_in_API_SolDespJson(string proceso, Nullable<int> empId, Nullable<int> tipoSolicitud, Nullable<int> codigoBodega, string tipoReferencia, string numeroReferencia, Nullable<System.DateTime> fechaReferencia, Nullable<System.DateTime> fechaProceso, Nullable<int> tipoDocumento, string numeroDocto, Nullable<System.DateTime> fechaDocto, string glosa, string cliente, string razonSocial, string telefono, string email, string direccion, string contacto, Nullable<int> rutaDespacho, string region, string comuna, string ciudad, string vendedor, string comprador, string dato1, string dato2, string dato3, Nullable<decimal> valor1, Nullable<decimal> valor2, Nullable<decimal> valor3, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, Nullable<System.DateTime> fecha3, Nullable<int> sucursal)
        {
            var procesoParameter = proceso != null ?
                new ObjectParameter("Proceso", proceso) :
                new ObjectParameter("Proceso", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var tipoSolicitudParameter = tipoSolicitud.HasValue ?
                new ObjectParameter("TipoSolicitud", tipoSolicitud) :
                new ObjectParameter("TipoSolicitud", typeof(int));
    
            var codigoBodegaParameter = codigoBodega.HasValue ?
                new ObjectParameter("CodigoBodega", codigoBodega) :
                new ObjectParameter("CodigoBodega", typeof(int));
    
            var tipoReferenciaParameter = tipoReferencia != null ?
                new ObjectParameter("TipoReferencia", tipoReferencia) :
                new ObjectParameter("TipoReferencia", typeof(string));
    
            var numeroReferenciaParameter = numeroReferencia != null ?
                new ObjectParameter("NumeroReferencia", numeroReferencia) :
                new ObjectParameter("NumeroReferencia", typeof(string));
    
            var fechaReferenciaParameter = fechaReferencia.HasValue ?
                new ObjectParameter("FechaReferencia", fechaReferencia) :
                new ObjectParameter("FechaReferencia", typeof(System.DateTime));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("FechaProceso", fechaProceso) :
                new ObjectParameter("FechaProceso", typeof(System.DateTime));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(int));
    
            var numeroDoctoParameter = numeroDocto != null ?
                new ObjectParameter("NumeroDocto", numeroDocto) :
                new ObjectParameter("NumeroDocto", typeof(string));
    
            var fechaDoctoParameter = fechaDocto.HasValue ?
                new ObjectParameter("FechaDocto", fechaDocto) :
                new ObjectParameter("FechaDocto", typeof(System.DateTime));
    
            var glosaParameter = glosa != null ?
                new ObjectParameter("Glosa", glosa) :
                new ObjectParameter("Glosa", typeof(string));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("Contacto", contacto) :
                new ObjectParameter("Contacto", typeof(string));
    
            var rutaDespachoParameter = rutaDespacho.HasValue ?
                new ObjectParameter("RutaDespacho", rutaDespacho) :
                new ObjectParameter("RutaDespacho", typeof(int));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var comunaParameter = comuna != null ?
                new ObjectParameter("Comuna", comuna) :
                new ObjectParameter("Comuna", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var vendedorParameter = vendedor != null ?
                new ObjectParameter("Vendedor", vendedor) :
                new ObjectParameter("Vendedor", typeof(string));
    
            var compradorParameter = comprador != null ?
                new ObjectParameter("Comprador", comprador) :
                new ObjectParameter("Comprador", typeof(string));
    
            var dato1Parameter = dato1 != null ?
                new ObjectParameter("Dato1", dato1) :
                new ObjectParameter("Dato1", typeof(string));
    
            var dato2Parameter = dato2 != null ?
                new ObjectParameter("Dato2", dato2) :
                new ObjectParameter("Dato2", typeof(string));
    
            var dato3Parameter = dato3 != null ?
                new ObjectParameter("Dato3", dato3) :
                new ObjectParameter("Dato3", typeof(string));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("Valor1", valor1) :
                new ObjectParameter("Valor1", typeof(decimal));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("Valor2", valor2) :
                new ObjectParameter("Valor2", typeof(decimal));
    
            var valor3Parameter = valor3.HasValue ?
                new ObjectParameter("Valor3", valor3) :
                new ObjectParameter("Valor3", typeof(decimal));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("Fecha1", fecha1) :
                new ObjectParameter("Fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("Fecha2", fecha2) :
                new ObjectParameter("Fecha2", typeof(System.DateTime));
    
            var fecha3Parameter = fecha3.HasValue ?
                new ObjectParameter("Fecha3", fecha3) :
                new ObjectParameter("Fecha3", typeof(System.DateTime));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_in_API_SolDespJson_Result>("sp_in_API_SolDespJson", procesoParameter, empIdParameter, tipoSolicitudParameter, codigoBodegaParameter, tipoReferenciaParameter, numeroReferenciaParameter, fechaReferenciaParameter, fechaProcesoParameter, tipoDocumentoParameter, numeroDoctoParameter, fechaDoctoParameter, glosaParameter, clienteParameter, razonSocialParameter, telefonoParameter, emailParameter, direccionParameter, contactoParameter, rutaDespachoParameter, regionParameter, comunaParameter, ciudadParameter, vendedorParameter, compradorParameter, dato1Parameter, dato2Parameter, dato3Parameter, valor1Parameter, valor2Parameter, valor3Parameter, fecha1Parameter, fecha2Parameter, fecha3Parameter, sucursalParameter);
        }
    
        public virtual ObjectResult<Sp_Proc_IntegracionApi_Result> Sp_Proc_IntegracionApi(string archivo, string userName, Nullable<System.DateTime> fechaProceso)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var fechaProcesoParameter = fechaProceso.HasValue ?
                new ObjectParameter("FechaProceso", fechaProceso) :
                new ObjectParameter("FechaProceso", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Proc_IntegracionApi_Result>("Sp_Proc_IntegracionApi", archivoParameter, userNameParameter, fechaProcesoParameter);
        }
    
        public virtual ObjectResult<sp_proc_API_TMPSolRecepcionJson_Result> sp_proc_API_TMPSolRecepcionJson(string archivo, string usuarioDig)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var usuarioDigParameter = usuarioDig != null ?
                new ObjectParameter("UsuarioDig", usuarioDig) :
                new ObjectParameter("UsuarioDig", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_proc_API_TMPSolRecepcionJson_Result>("sp_proc_API_TMPSolRecepcionJson", archivoParameter, usuarioDigParameter);
        }
    }
}
